[{"C:\\Users\\atgle\\project321\\321-Project\\src\\index.js":"1","C:\\Users\\atgle\\project321\\321-Project\\src\\reportWebVitals.js":"2","C:\\Users\\atgle\\project321\\321-Project\\src\\App.js":"3","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\routes\\Routes.js":"4","C:\\Users\\atgle\\project321\\321-Project\\src\\libs\\index.js":"5","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\Home-Page.js":"6","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\account\\LogInPage.js":"7","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\LevelNavigationPage.js":"8","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\account\\SignUpPage.js":"9","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\routes\\AuthenticatedRoute.js":"10","C:\\Users\\atgle\\project321\\321-Project\\src\\libs\\contextLib.js":"11","C:\\Users\\atgle\\project321\\321-Project\\src\\libs\\Actions.js":"12","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Profile-Image-Menu.js":"13","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Settings.js":"14","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Request-URL.js":"15","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Player-Signout.js":"16","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Birthday-Format.js":"17","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Create-Player-Template.js":"18","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\routes\\Level-Routes.js":"19","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\localstorage\\Local-Storage-Functions.js":"20","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\ProfilePictureImages.js":"21","C:\\Users\\atgle\\project321\\321-Project\\src\\libs\\Reducer.js":"22","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\LevelNavigationIndex.js":"23","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Game-Wrapper.js":"24","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\SkillNavigationPage.js":"25","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Level-List.js":"26","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\ThrowEyesImages.js":"27","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\CardsGameImages.js":"28","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\MixAndMatchImages.js":"29","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Back-Button.js":"30","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\games\\Throw-Eyes.js":"31","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\games\\CardsGame.js":"32","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\games\\MixAndMatch.js":"33","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\Monster-Images.js":"34","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\LevelNavbar.js":"35","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\Image-Functions.js":"36","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\LevelNavComponent.js":"37","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Game-Popup.js":"38","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\DragItemTypes.js":"39","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\mixandmatch\\Target.js":"40","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\mixandmatch\\Source.js":"41","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\throweyes\\Target.js":"42","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\throweyes\\Character.js":"43","C:\\Users\\atgle\\project321\\321-Project\\src\\aws-exports.js":"44"},{"size":895,"mtime":1619656702074,"results":"45","hashOfConfig":"46"},{"size":375,"mtime":1619656702130,"results":"47","hashOfConfig":"46"},{"size":225,"mtime":1619848111872,"results":"48","hashOfConfig":"46"},{"size":909,"mtime":1619656702062,"results":"49","hashOfConfig":"46"},{"size":550,"mtime":1619656702082,"results":"50","hashOfConfig":"46"},{"size":8230,"mtime":1619656702090,"results":"51","hashOfConfig":"46"},{"size":6683,"mtime":1619847574696,"results":"52","hashOfConfig":"46"},{"size":224,"mtime":1619656702094,"results":"53","hashOfConfig":"46"},{"size":12208,"mtime":1619656702110,"results":"54","hashOfConfig":"46"},{"size":1328,"mtime":1619656702054,"results":"55","hashOfConfig":"46"},{"size":2778,"mtime":1619656702082,"results":"56","hashOfConfig":"46"},{"size":1896,"mtime":1619656702078,"results":"57","hashOfConfig":"46"},{"size":1021,"mtime":1619656702010,"results":"58","hashOfConfig":"46"},{"size":4159,"mtime":1619656702018,"results":"59","hashOfConfig":"46"},{"size":660,"mtime":1619656702014,"results":"60","hashOfConfig":"46"},{"size":379,"mtime":1619656702002,"results":"61","hashOfConfig":"46"},{"size":808,"mtime":1619656701978,"results":"62","hashOfConfig":"46"},{"size":1459,"mtime":1619656701982,"results":"63","hashOfConfig":"46"},{"size":9196,"mtime":1619656702058,"results":"64","hashOfConfig":"46"},{"size":2658,"mtime":1619656702042,"results":"65","hashOfConfig":"46"},{"size":366,"mtime":1619656702038,"results":"66","hashOfConfig":"46"},{"size":996,"mtime":1619656702078,"results":"67","hashOfConfig":"46"},{"size":5069,"mtime":1619656702094,"results":"68","hashOfConfig":"46"},{"size":4071,"mtime":1619656701994,"results":"69","hashOfConfig":"46"},{"size":2412,"mtime":1619656702102,"results":"70","hashOfConfig":"46"},{"size":8120,"mtime":1619656701994,"results":"71","hashOfConfig":"46"},{"size":607,"mtime":1619656702038,"results":"72","hashOfConfig":"46"},{"size":4714,"mtime":1619656702026,"results":"73","hashOfConfig":"46"},{"size":2620,"mtime":1619656702034,"results":"74","hashOfConfig":"46"},{"size":432,"mtime":1619656701974,"results":"75","hashOfConfig":"46"},{"size":3519,"mtime":1619656702126,"results":"76","hashOfConfig":"46"},{"size":4856,"mtime":1619656702114,"results":"77","hashOfConfig":"46"},{"size":10796,"mtime":1619656702122,"results":"78","hashOfConfig":"46"},{"size":338,"mtime":1619656702034,"results":"79","hashOfConfig":"46"},{"size":1907,"mtime":1619656702002,"results":"80","hashOfConfig":"46"},{"size":6227,"mtime":1619656702030,"results":"81","hashOfConfig":"46"},{"size":3036,"mtime":1619656701998,"results":"82","hashOfConfig":"46"},{"size":4975,"mtime":1619656701990,"results":"83","hashOfConfig":"46"},{"size":110,"mtime":1619656701986,"results":"84","hashOfConfig":"46"},{"size":1281,"mtime":1619656702050,"results":"85","hashOfConfig":"46"},{"size":781,"mtime":1619656702046,"results":"86","hashOfConfig":"46"},{"size":265,"mtime":1619656702070,"results":"87","hashOfConfig":"46"},{"size":378,"mtime":1619656702066,"results":"88","hashOfConfig":"46"},{"size":469,"mtime":1619658065634,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"7fge38",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"92"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"92"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"92"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"92"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"C:\\Users\\atgle\\project321\\321-Project\\src\\index.js",[],["202","203"],"C:\\Users\\atgle\\project321\\321-Project\\src\\reportWebVitals.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\App.js",["204"],"C:\\Users\\atgle\\project321\\321-Project\\src\\components\\routes\\Routes.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\libs\\index.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\Home-Page.js",["205","206","207","208","209"],"import './Home-Page.scss'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport Settings from '../components/Settings'\r\nimport PlayerSignout from '../components/Player-Signout'\r\nimport { useAuthPlayer, useAuthUser } from '../libs'\r\nimport Axios from 'axios'\r\nimport ProfileImageMenu from '../components/Profile-Image-Menu'\r\nimport FormatBirthday from '../components/Birthday-Format'\r\nimport CreatePlayerTemplate from '../components/Create-Player-Template'\r\nimport { GetPlayersURL, CreatePlayerURL } from '../components/Request-URL'\r\nimport { createLocalPlayer, setLocalPlayerList } from '../components/localstorage/Local-Storage-Functions'\r\nimport SimpleBar from 'simplebar-react';\r\nimport { TiUserAdd } from 'react-icons/ti';\r\nimport { ProfilePictureImages } from '../components/images/ProfilePictureImages'\r\n\r\nexport default function HomePage() {\r\n\r\n    const currentPlayer = useAuthPlayer()\r\n    const user = useAuthUser()\r\n\r\n    const [playerList, setPlayerList] = useState([])\r\n    const [createNewPlayer, setCreateNewPlayer] = useState(false)\r\n    const [newPlayerCreated, setNewPlayerCreated] = useState(false)\r\n    const [nickname, setNickname] = useState('')\r\n    const [birthday, setBirthday] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [profileImage, setProfileImage] = useState(0)\r\n    //const [activeProfileImage, setActiveProfileImage] = useState(0)\r\n\r\n    const GetPlayers = () => {\r\n        if(user !== false) { // If using a logged in account, query DB for players\r\n            Axios.post(GetPlayersURL, {\r\n                UserName: user.attributes.sub\r\n            }).then((response) => {\r\n                setPlayerList(response.data);\r\n            }).catch((error) => {\r\n                setErrorMessage(error)\r\n            })\r\n        }\r\n        if (user === false) { // If not using an account and not logged in, use local storage if exists\r\n            setLocalPlayerList(setPlayerList)\r\n        }\r\n    }\r\n\r\n    const createPlayer = () => {\r\n        if(user !== false) { // If using a logged in account, store player in DB\r\n            Axios.post(CreatePlayerURL, {\r\n                UserName: user.attributes.sub,\r\n                nickname: nickname,\r\n                profileImage: profileImage,\r\n                birthday: FormatBirthday(birthday.toString())\r\n            }).then(() => {\r\n                hideCreatePlayer()\r\n            }).catch((error) => {\r\n                setErrorMessage(error)\r\n            })\r\n        }\r\n        else if(user === false) { // If not using an account and not logged in, store player in local storage\r\n            const localProfileImage = profileImage\r\n            const localBirthDay = FormatBirthday(birthday.toString())\r\n            createLocalPlayer(localProfileImage, localBirthDay, nickname)\r\n        }\r\n\r\n        setNewPlayerCreated(true)\r\n    }\r\n\r\n    useEffect(() => { // on page load display available players\r\n        GetPlayers()\r\n    }, [])\r\n    \r\n    useEffect(() => { // if a new player is created populate the new list then display\r\n        if(newPlayerCreated === true) {\r\n            GetPlayers()\r\n            hideCreatePlayer()\r\n        }\r\n    }, [newPlayerCreated])\r\n\r\n    function showCreatePlayer() {\r\n        setCreateNewPlayer(true)\r\n    }\r\n\r\n    function hideCreatePlayer() {\r\n        setCreateNewPlayer(false)\r\n    }\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            {user !== false && <Settings />}\r\n            {currentPlayer.player === false ?\r\n                <>\r\n                    {createNewPlayer === false ? \r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"container mb-5\">\r\n                                <div className=\"row justify-content-center\">\r\n                                        <h2>Who's playing?</h2>\r\n                                    </div>\r\n                            </div>\r\n                            <div className=\"container-fluid mb-5\">      \r\n                                <div className=\"row justify-content-center\">\r\n                                    <SimpleBar style={{ maxWidth: '90vw', width: '85vw', maxHeight: '50vh' }} autoHide={false}>\r\n                                        <div className=\"container\">\r\n                                            <div className='row'>\r\n                                                <div class=\"d-flex\">\r\n                                                    {playerList.map(player => {\r\n                                                        return (\r\n                                                            <div key={player.NickName} className=\"Player-Container card mr-3\">\r\n                                                                <a onClick={() => currentPlayer.setPlayer(player)}>\r\n                                                                    <img class=\"card-img-top\" src={ProfilePictureImages[player.ProfilePicture].default} alt=\"Player Profile Picture\" />\r\n                                                                    <div class=\"card-footer\">{player.NickName}</div>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n                                                    <div id=\"Create-Player\" className=\"Player-Container card\">\r\n                                                        <a onClick={showCreatePlayer}>\r\n                                                            <TiUserAdd size={150} className=\"card-img-top\" />\r\n                                                            <div class=\"card-footer\">New Player</div>\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </SimpleBar>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <h2>Create New Player</h2>\r\n                            </div>\r\n                            <div className=\"row justify-content-center\">\r\n                                <div id=\"Login-Content\" className=\"d-inline-flex flex-column align-items-center justify-content-center\">\r\n                                <ProfileImageMenu ProfileImageState={setProfileImage} />\r\n                                \r\n                                {user !== false ? \r\n                                        <form className=\"mt-3\">\r\n                                            {CreatePlayerTemplate(setNickname, setBirthday, birthday, createPlayer, errorMessage)}\r\n                                        </form>\r\n                                    :\r\n                                        <>\r\n                                            {CreatePlayerTemplate(setNickname, setBirthday, birthday, createPlayer, errorMessage)}\r\n                                        </>\r\n                                }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </>\r\n            :\r\n                <div className=\"container\">\r\n                    <PlayerSignout />\r\n                    <div id=\"Home-Title\" class=\"row justify-content-center title\">\r\n                        <h1>JumpStart</h1>\r\n                    </div>\r\n                    <div id=\"Home-Button\" className=\"row justify-content-center\">\r\n                        <Link to=\"/LevelNavigation\">\r\n                            <button type=\"button\" className=\"btn btn-primary\"><FaPlay /></button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n        ","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\account\\LogInPage.js",["210","211","212"],"C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\LevelNavigationPage.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\account\\SignUpPage.js",["213","214","215","216","217","218","219","220"],"import React, { useState, useEffect } from 'react'\r\nimport { signupUser, confirmUserSignUp, useAuthState, useAuthDispatch } from '../../libs'\r\nimport { Link } from 'react-router-dom';\r\nimport { Oval } from 'react-loading-icons'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport ReactCodeInput from 'react-verification-code-input';\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\nimport './SignupPage.scss'\r\nconst passwordValidator = require('password-validator');\r\nconst isEmail = require('sane-email-validation')\r\n\r\nexport default function SignupPage() {\r\n    \r\n    const schema = new passwordValidator()\r\n    const navigate = useNavigate();\r\n\r\n    schema\r\n    .is().min(8)                                    // Minimum length 8\r\n    .is().max(16)                                  // Maximum length 100\r\n    .has().uppercase(1)                              // Must have uppercase letters\r\n    .has().lowercase()                              // Must have lowercase letters\r\n    .has().digits(1)                                // Must have at least 1 digit\r\n    .has().not().spaces()                           // Should not have spaces\r\n    .is().not().oneOf(['Passw0rd', 'Password123', 'Spacebar123', 'Qwerty123', 'Asdf123']);\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [emailFocused, setEmailFocused] = useState(false)\r\n    const [password, setPassword] = useState('')\r\n    const [passwordFocused, setPasswordFocused] = useState(false)\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [confirmPasswordFocused, setConfirmPasswordFocused] = useState(false)\r\n    const [authenticationCode, setAuthenticationCode] = useState('')\r\n    const [step, setStep] = useState(0)\r\n    const [emailError, setEmailError] = useState(null)\r\n    const [passwordError, setPasswordError] = useState(null)\r\n    const [confirmPasswordError, setConfirmPasswordError] = useState(null)\r\n    const [autoCompleteSignUp, setAutoCompleteSignUp] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (email.length > 0 && !emailFocused && !isEmail(email)) // If there is something in the email input field, and It's not focused, and the address Isn't valid, set error message\r\n            setEmailError(`${email} is not a valid email address.`)\r\n        else if (isEmail(email) || email.length === 0) \r\n            setEmailError(null)\r\n    }, [emailFocused])\r\n\r\n    useEffect(() => {\r\n        if (!passwordFocused && !schema.validate(password) && password.length > 0) {\r\n            const errors = schema.validate(password, {list: true})\r\n            let errorMessageString = 'Password must '\r\n            for (let i = 0; i < errors.length; i++) {\r\n                errorMessageString += `${PasswordErrorMessage(errors[i])}${(i === errors.length - 1) ? '.' : ', '}`\r\n            }\r\n            setPasswordError(errorMessageString)\r\n        }\r\n        else if (schema.validate(password) || password.length === 0)\r\n            setPasswordError(null)\r\n    }, [passwordFocused])\r\n\r\n    function PasswordErrorMessage(val) {\r\n        switch(val) {\r\n            case 'min':\r\n                return 'be at least 8 characters';\r\n            case 'spaces':\r\n                return 'not contain spaces';\r\n            case 'uppercase':\r\n                return 'have at least 1 uppercase letter';\r\n            case 'lowercase':\r\n                return 'have at least 1 uppercase letter';\r\n            case 'digits':\r\n                return 'have at least 2 numbers';\r\n            case 'oneOf':\r\n                return ` not be a common password: ${password}`;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!confirmPasswordFocused && confirmPassword.length > 0 && password.length > 0 && password !== confirmPassword) {\r\n            setConfirmPasswordError('Passwords do not match.')\r\n        }\r\n        else if (password == confirmPassword || confirmPassword.length === 0)\r\n            setConfirmPasswordError(null)\r\n    }, [confirmPasswordFocused])\r\n\r\n    const dispatch = useAuthDispatch()\r\n    let { loading, errorMessage } = useAuthState()\r\n\r\n    useEffect(() => {\r\n        errorMessage = null\r\n    }, [])\r\n\r\n    const handleSignUp = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            await signupUser(dispatch, { email, password })\r\n            setStep(1)\r\n        } catch (error) {\r\n            errorMessage = error\r\n        } \r\n    }\r\n    \r\n    const goBack = () => {\r\n        setStep(0)\r\n    }\r\n    \r\n    const confirmSignUp = async () => {\r\n        try {\r\n            await confirmUserSignUp(dispatch, { email, authenticationCode })\r\n            navigate('../Login')\r\n        } catch (error) {\r\n            errorMessage = error\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(authenticationCode.length === 6 && autoCompleteSignUp === true) {\r\n            confirmSignUp()\r\n            setAutoCompleteSignUp(false)\r\n        }\r\n    }, [autoCompleteSignUp])\r\n\r\n    return (\r\n        <div id=\"Signup-Background\">\r\n            <div className=\"container\">\r\n                <div id=\"Title-Row\" className=\"row\">\r\n                    <div className=\"container\">\r\n                        <div id=\"Login-Title\" class=\"row justify-content-md-center\">\r\n                            <h1>JumpStart</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"Signup-Content-Row\" className=\"row mt-4\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-md-center\">\r\n                            <h2>{step === 0 ? 'Sign Up' : 'Confirm Sign Up'}</h2>\r\n                        </div>\r\n                        <div className=\"row justify-content-md-center\">\r\n                            <div id=\"Signup-Content\" className=\"d-inline-flex flex-column align-items-center justify-content-center\">\r\n                                {step === 0 &&\r\n                                    <>\r\n                                        <span>Already have an account?&nbsp;\r\n                                            <Link to='../Login'>\r\n                                                <a>Log In Here</a>\r\n                                            </Link>\r\n                                        </span>\r\n                                        <form className=\"mt-3\">\r\n                                            <div className=\"d-flex\">\r\n                                                <label htmlFor=\"email\" className=\"align-self-center\">Email</label>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" id=\"email\" className=\"form-control-lg\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} name=\"email\" required disabled={loading} onFocus={() => setEmailFocused(true)} onBlur={() => setEmailFocused(false)} />\r\n                                                    {emailError}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <label htmlFor=\"password\" className=\"align-self-center\">Password</label>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"form-group mb-0\">\r\n                                                    <input type=\"password\" id=\"password\" className=\"form-control-lg\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} name=\"password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" required disabled={loading} onFocus={() => setPasswordFocused(true)} onBlur={() => setPasswordFocused(false)} />\r\n                                                    <PasswordStrengthBar className=\"pt-1 password-strength-bar\" password={password} minLength={8} />\r\n                                                    {passwordError}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <label htmlFor=\"confirmPassword\" className=\"align-self-center\">Confirm Password</label>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"password\" id=\"confirmPassword\" className=\"form-control-lg\" placeholder=\"confirm password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} name=\"confirmPassword\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" required disabled={loading} onFocus={() => setConfirmPasswordFocused(true)} onBlur={() => setConfirmPasswordFocused(false)} />\r\n                                                    {confirmPasswordError}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-end\">{errorMessage ? <p>{errorMessage}</p> : null}</div>\r\n                                            <div className=\"d-flex justify-content-end\">\r\n                                                {loading === true && <Oval />}<button onClick={handleSignUp} disabled={loading}>Create Account</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </>\r\n                                }\r\n                                {step === 1 &&\r\n                                    <div>\r\n                                        <form className=\"mt-3\">\r\n                                            <div className=\"d-flex\">\r\n                                                <label htmlFor=\"email\" className=\"align-self-center\">Email</label>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" value={email} className=\"form-control-lg\" disabled name=\"email\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <label htmlFor=\"authenticationCode\" className=\"align-self-center\">Authentication Code</label>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"form-group\">\r\n                                                    <ReactCodeInput type={'number'} fields={6} fieldWidth={75} autoFocus loading={loading} onChange={(code) => setAuthenticationCode(code)} onComplete={() => setAutoCompleteSignUp(true)} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-end\">{errorMessage ? <p>{errorMessage}</p> : null}</div>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <button onClick={goBack} disabled={loading}>Go Back</button>{loading === true && <Oval />}<button onClick={confirmSignUp} disabled={loading} >Authenticate</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\routes\\AuthenticatedRoute.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\libs\\contextLib.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\libs\\Actions.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Profile-Image-Menu.js",["221","222","223"],"import { ProfilePictureImages } from './images/ProfilePictureImages'\r\nimport { RiLock2Fill } from 'react-icons/ri'\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport './Profile-Image-Menu.scss'\r\n\r\nexport default function ProfileImageMenu(props) {\r\n\r\n    return (\r\n        <SimpleBar style={{ width: '70vw' }} autoHide={false}>\r\n            <div id=\"Profile-Image-Menu-Container\">\r\n                <div className=\"d-flex\">\r\n                    {ProfilePictureImages.map((image,i) => {\r\n                        return (\r\n                            <div key={i} className=\"card\">\r\n                                <a onClick={() => props.ProfileImageState(i)}>\r\n                                    <img class=\"card-img-top\" src={image.default} alt={`Profile Picture ${i}`} />\r\n                                </a>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </SimpleBar>\r\n    )\r\n\r\n}\r\n","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Settings.js",["224","225","226","227","228","229"],"import Popup from 'reactjs-popup'\r\nimport { RiSettings3Fill } from 'react-icons/ri'\r\nimport { useAuthUser, useAuthDispatch, useAuthState, logout, changePassword } from '../libs'\r\nimport { useState } from 'react'\r\nimport './Settings.scss'\r\n\r\n\r\nexport default function Settings(props) {\r\n\tconst dispatch = useAuthDispatch()\r\n  const userData = useAuthUser();\r\n  const [popupState, setpopupState] = useState(0)\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const [oldPassword, setoldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const { loading, errorMessage } = useAuthState()\r\n\r\n  const closeModal = () => {\r\n    setOpen(false)\r\n    setpopupState(0)\r\n    clearInput()\r\n  }\r\n\r\n  const clearInput = () => {\r\n    setoldPassword('')\r\n    setNewPassword('')\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    logout(dispatch)\r\n    window.location.reload(false);\r\n  }\r\n\r\n  const showChangePasswordForm = () => {\r\n    setpopupState(2)\r\n  }\r\n\r\n  const showVerifyDetails = () => {\r\n    setpopupState(1)\r\n  }\r\n\r\n  const handleChangePassword = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n        await changePassword(dispatch, { oldPassword, newPassword })\r\n        clearInput()\r\n        setpopupState(0)\r\n    } catch (error) {\r\n        console.log(error)\r\n        return\r\n    }\r\n  } \r\n\r\n    return (\r\n      <>\r\n      <button id=\"Settings-Button\" type=\"button\" className=\"btn\" onClick={() => setOpen(o => !o)}><RiSettings3Fill size={85} /></button>\r\n        <Popup \r\n            modal\r\n            open={open} \r\n            closeOnDocumentClick\r\n            closeOnEscape\r\n            onClose={closeModal}\r\n        >\r\n        {popupState === 0 &&\r\n          <div>\r\n            <a className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </a>\r\n            <div id=\"Settings-Title\" className=\"settingsContent\">\r\n                <h3>Account Options</h3>\r\n            </div>\r\n            <div className=\"settingsContent\">\r\n                <a onClick={showVerifyDetails}>\r\n                    Verify Details\r\n                </a>\r\n            </div>\r\n            <div className=\"settingsContent\">\r\n                <a onClick={showChangePasswordForm}>\r\n                    Change Password\r\n                </a>\r\n            </div>\r\n            <div className=\"settingsContent\">\r\n                <a onClick={handleLogout}>\r\n                    Sign Out\r\n                </a>\r\n            </div>\r\n          </div>\r\n        }\r\n        {popupState === 1 &&\r\n          <div>\r\n            <a className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </a>\r\n            <div id=\"Settings-Title\" className=\"settingsContent\">\r\n                <h3>Verify Details</h3>\r\n            </div>\r\n            <div className=\"settingsContent\">\r\n              {`Email: ${userData.attributes.email}`}\r\n            </div>\r\n            <div className=\"settingsContent\">\r\n              {`Phone Number: ${userData.attributes.phone_number}`}\r\n            </div>\r\n          </div>\r\n        }\r\n        {popupState === 2 &&\r\n          <div>\r\n            <a className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </a>\r\n            <div id=\"Settings-Title\" className=\"settingsContent\">\r\n                <h3>Change Password</h3>\r\n            </div>\r\n            {\r\n                errorMessage ? <p>{errorMessage}</p> : null\r\n            }\r\n            <form >\r\n              <div>\r\n                <div>\r\n                  <label htmlFor=\"oldPassword\">Old Password: </label>\r\n                  <input type=\"text\" id='oldPassword' value={oldPassword} onChange={(e) => setoldPassword(e.target.value)} disabled={loading} />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"newPassword\">New Password: </label>\r\n                  <input type=\"password\" id='newPassword' value={newPassword} onChange={(e) => setNewPassword(e.target.value)} disabled={loading} />\r\n                </div>\r\n              </div>\r\n              <button onClick={handleChangePassword} disabled={loading}>Confirm</button>\r\n            </form>\r\n          </div>\r\n        }\r\n        </Popup>\r\n      </>\r\n    )\r\n}","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Request-URL.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Player-Signout.js",["230"],"import { BiLogOut } from 'react-icons/bi'\r\nimport { useAuthPlayer } from '../libs'\r\nimport './Player-Signout.scss'\r\n\r\nexport default function PlayerSignout() {\r\n\r\n    const currentPlayer = useAuthPlayer();\r\n\r\n    return(\r\n        <div id=\"Player-Logout-Button\">\r\n            <a onClick={() => currentPlayer.setPlayer(false)}><BiLogOut size={85} /></a>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Birthday-Format.js",["231"],"\r\nexport default function FormatBirthday(date) {\r\n    let formattedBirthday = date.slice(11,15) + '-' + returnMonth(date) + '-' + date.slice(8,10)\r\n\r\n    return formattedBirthday;\r\n}\r\n\r\nfunction returnMonth(date) {\r\n    switch(date.slice(4,7)) {\r\n        case 'Jan':\r\n            return '01'\r\n        case 'Feb':\r\n            return '02'\r\n        case 'Mar': \r\n            return '03'\r\n        case 'Apr':\r\n            return '04'\r\n        case 'May':\r\n            return '05'\r\n        case 'Jun':\r\n            return '06'\r\n        case 'Jul':\r\n            return '07'\r\n        case 'Aug':\r\n            return '08'\r\n        case 'Sep':\r\n            return '09'\r\n        case 'Oct':\r\n            return '10'\r\n        case 'Nov':\r\n            return '11'\r\n        case 'Dec':\r\n            return '12'\r\n    }\r\n}","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Create-Player-Template.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\components\\routes\\Level-Routes.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\components\\localstorage\\Local-Storage-Functions.js",["232"],"const LocalIdentifier = '34CUH8sLCXUZTA79X748'; // random string is appended to created player nicknames to ensure only our local storage is used\r\n\r\nexport function getLocalPlayer(nickname) {\r\n    return JSON.parse(localStorage.getItem(nickname + '-' + LocalIdentifier))\r\n}\r\n\r\nexport function createLocalPlayer(localProfileImage, localBirthDay, nickname) { // create a new player with default progress\r\n    \r\n    var blankData = {\r\n        'ProfileImage': localProfileImage,\r\n        'Birthday': localBirthDay,\r\n        'Progress': {\r\n            'Balance': {\r\n                'Balance-Eyes': 0,\r\n                'Balance-Legs': 0,\r\n                'Balance-Arms': 0\r\n            },\r\n            'Throw': {\r\n                'Throw-Eyes': 0\r\n            },\r\n            'Kick': {\r\n                'Kick-Eyes': 0,\r\n                'Kick-Foot': 0\r\n            },\r\n            'Jump': {\r\n                'Jump-Feet': 0,\r\n                'Jump-Knees': 0,\r\n                'Jump-Arms': 0\r\n            },\r\n            'Run': {\r\n                'Run-Eyes': 0,\r\n                'Run-Arms': 0,\r\n                'Run-Knees': 0\r\n            },\r\n            'Hop': {\r\n                'Hop-Eyes': 0,\r\n                'Hop-Legs': 0,\r\n                'Hop-Arms': 0\r\n            },\r\n            'Slide': {\r\n                'Slide-Feet': 0,\r\n                'Slide-Eyes': 0,\r\n                'Slide-HipsShoulders': 0\r\n            },\r\n            'Leap': {\r\n                'Leap-Eyes': 0,\r\n                'Leap-Legs': 0\r\n            }\r\n        }\r\n    };\r\n\r\n    localStorage.setItem(nickname + '-' + LocalIdentifier, JSON.stringify(blankData)) \r\n}\r\n\r\nexport function setLocalPlayerList(setPlayerList) { // used in home page to populate the created players list\r\n    var localPlayers = []\r\n    for(let i = 0; i < localStorage.length; i++) {\r\n        var key = localStorage.key(i).split(\"-\")\r\n        console.log(key)\r\n        if(key[1] == LocalIdentifier) {\r\n            var temp = JSON.parse(localStorage.getItem(localStorage.key(i)))\r\n            localPlayers.push({ 'NickName': key[0], 'ProfilePicture': temp.ProfileImage })\r\n        }\r\n    }\r\n    setPlayerList(localPlayers)\r\n}\r\n\r\nexport function updateLocalProgress(nickname, difficulty, SkillName, GameName) { // used to update progress of a local player when a level is completed\r\n    var localPlayer = JSON.parse(localStorage.getItem(nickname + '-' + LocalIdentifier))\r\n    if(difficulty > parseInt(localPlayer['Progress'][SkillName][GameName])) {\r\n        localPlayer['Progress'][SkillName][GameName] = difficulty\r\n        localStorage.setItem(nickname + '-' + LocalIdentifier, JSON.stringify(localPlayer))\r\n    }\r\n}\r\n","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\ProfilePictureImages.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\libs\\Reducer.js",["233","234","235","236","237","238","239","240","241","242","243","244"],"export const initialState = {\r\n  loading: false,\r\n  errorMessage: null\r\n};\r\n \r\nexport const AuthReducer = (initialState, action) => {\r\n    if (action.type == \"REQUEST_LOGIN\" || action.type == \"CHANGE_PASSWORD\" || action.type == \"REQUEST_SIGNUP\" || action.type == \"REQUEST_SIGNUP_CONFIRMATION\")\r\n      return {\r\n        ...initialState,\r\n        loading: true\r\n      }\r\n\r\n    if (action.type == \"LOGIN_SUCCESS\" || action.type == \"CHANGE_PASSWORD_SUCCESS\" || action.type == \"SIGNUP_SUCCESS\" || action.type == \"SIGNUP_CONFIRMATION_SUCCESS\")\r\n      return {\r\n        ...initialState,\r\n        loading: false\r\n      }\r\n\r\n    if (action.type == \"LOGOUT\")\r\n      return {\r\n        ...initialState\r\n      }\r\n\r\n    if (action.type == \"LOGIN_ERROR\" || action.type == \"CHANGE_PASSWORD_ERROR\" || action.type == \"SIGNUP_ERROR\")\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMessage: action.error\r\n      }\r\n \r\n    throw new Error(`Unhandled action type: ${action.type}`);\r\n};","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\LevelNavigationIndex.js",["245","246","247"],"import React, { useState, useEffect } from 'react'\r\nimport { Levels } from '../components/Level-List'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuthPlayer, useAuthUser } from '../libs'\r\nimport Axios from 'axios'\r\nimport { GetTotalProgressURL } from '../components/Request-URL'\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport { RiUserFill } from 'react-icons/ri'\r\nimport { TiTick } from 'react-icons/ti'\r\nimport { BsArrowRightShort } from 'react-icons/bs'\r\nimport LevelNavbar from '../components/LevelNavbar'\r\nimport { getLocalPlayer } from '../components/localstorage/Local-Storage-Functions'\r\nimport './LevelNavigationPage.scss'\r\n\r\nexport default function LevelNavigationPage(props) {\r\n    \r\n    const currentPlayer = useAuthPlayer()\r\n    const user = useAuthUser()\r\n\r\n    const [progress, setProgress] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    function getSkillProgress(SkillName) {\r\n        let total = 0\r\n        for (let i = 0; i < progress.length; i++) {\r\n            if (progress[i].SkillName === SkillName) {\r\n                total += progress[i].LevelsCompleted\r\n            }\r\n        }\r\n        return total\r\n    }\r\n\r\n    const GetProgress = () => {\r\n        if(user !== false) { // If using a logged in account, get progress from DB\r\n            Axios.post(GetTotalProgressURL, {\r\n                UserName: user.attributes.sub,\r\n                NickName: currentPlayer.player.NickName\r\n            }).then((response) => {\r\n                setProgress(response.data);\r\n            }).catch((error) => {\r\n                setErrorMessage(error)\r\n            })\r\n        }\r\n        else if(user === false) { // If not using an account and not logged in, get progress from local storage\r\n            let localPlayer = getLocalPlayer(currentPlayer.player.NickName)\r\n            let localPlayerProgress = localPlayer.Progress;\r\n            let localProgress = []\r\n\r\n            for(let skillKey in localPlayerProgress) {\r\n                if(localPlayerProgress.hasOwnProperty(skillKey)) {\r\n                    for(let gameKey in localPlayerProgress[skillKey]) {\r\n                        let localLevelsCompleted = parseInt(localPlayerProgress[skillKey][gameKey])\r\n                        localProgress.push({ 'SkillName': skillKey, 'LevelsCompleted': localLevelsCompleted })\r\n                    }\r\n                }\r\n            }\r\n\r\n            setProgress(localProgress)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetProgress()\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"Level-Nav-Background\">\r\n            <div className=\"container\">\r\n                <div className=\"d-flex flex-wrap mb-3\">\r\n                    <div className=\"mr-auto\">\r\n                        <h1 id=\"Level-Navigation-Title\">JumpStart</h1>\r\n                    </div>\r\n                    <div id=\"Current-Player\" className=\"align-self-center\">\r\n                        <RiUserFill />{currentPlayer.player.NickName}\r\n                    </div>\r\n                </div>\r\n\r\n                <LevelNavbar />\r\n                \r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <SimpleBar style={{ height: '60vh' }} autoHide={false}>\r\n                    <div id=\"Level-Nav\">\r\n                        <div className= \"d-flex flex-wrap justify-content-around\">\r\n                            {Levels.map((level,i) => {\r\n                                return (    \r\n                                    <Link to={level.to} key={i}>\r\n                                        <div className={`d-inline-flex mb-5 Game-Container ${getSkillProgress(level.name) >= level.numLevels ? 'green' : 'orange' }`}>\r\n                                            <div className=\"nav-item\" id={\"Game-\"+level.id}>\r\n                                                <div className=\"d-flex justify-content-end mr-2\">\r\n                                                    <div className=\"d-flex nav-item-svg\">\r\n                                                        {getSkillProgress(level.name) >= level.numLevels ? <TiTick size={40} /> : <BsArrowRightShort size={40} /> }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"d-flex justify-content-center\"><img src={level.monster} /></div>\r\n                                                <div className=\"d-flex justify-content-center level-name\">{level.name}</div>\r\n                                                <div className=\"d-flex justify-content-center level-progress\">{`${getSkillProgress(level.name)} of ${level.numLevels} completed`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </SimpleBar>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Game-Wrapper.js",["248","249","250"],"import React, { useState, useEffect } from 'react'\r\nimport { useAuthPlayer, useAuthUser } from '../libs'\r\nimport GamePopup from './Game-Popup'\r\nimport Axios from 'axios'\r\nimport { CreateAttemptURL, CreateLocalAttemptURL } from './Request-URL'\r\nimport { updateLocalProgress, getLocalPlayer } from './localstorage/Local-Storage-Functions'\r\n\r\nexport default function GameWrapper(props) {\r\n\r\n    const [difficulty , setDifficulty] = useState(1)\r\n    const [levelCompleted, setLevelCompleted] = useState('False')\r\n    const [attemptNumber, setAttemptNumber] = useState(0)\r\n    const [popupState, setPopupState] = useState(true)\r\n    const [startTime, setStartTime] = useState(null)\r\n    const [finishTime, setFinishTime] = useState(null)\r\n    const [timeTaken, setTimeTaken] = useState(null)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const currentPlayer = useAuthPlayer()\r\n    const user = useAuthUser()\r\n\r\n    const gameTitle = props.gameTitle;\r\n    const levels = props.numLevels;\r\n    \r\n    const CreateAttempt = () => {\r\n        if(user !== false) { // If using a logged in account, store player in DB\r\n            Axios.post(CreateAttemptURL, {\r\n                GameName: props.GameName,\r\n                LevelNumber: difficulty,\r\n                UserName: user.attributes.sub,\r\n                NickName: currentPlayer.player.NickName,\r\n                Succesful: levelCompleted,\r\n                TimeTaken: timeTaken\r\n            }).then((response) => {\r\n                \r\n            }).catch((error) => {\r\n                setErrorMessage(error)\r\n                console.log(error)\r\n            })\r\n        }\r\n        else if(user === false) { // If not using an account and not logged in, store player in local storage\r\n            const localPlayer = getLocalPlayer(currentPlayer.player.NickName)\r\n            const localPlayerBirthDay = localPlayer.Birthday\r\n            \r\n            Axios.post(CreateLocalAttemptURL, {\r\n                GameName: props.GameName,\r\n                LevelNumber: difficulty,\r\n                NickName: currentPlayer.player.NickName,\r\n                BirthDay: localPlayerBirthDay,\r\n                Succesful: levelCompleted,\r\n                TimeTaken: timeTaken\r\n            }).then((response) => {\r\n                \r\n            }).catch((error) => {\r\n                setErrorMessage(error)\r\n                console.log(error)\r\n            })\r\n        }\r\n    }   \r\n\r\n    useEffect(() => {\r\n        if(popupState === false) // If the game popupscreen is set to false (closed) start the \"timer\"\r\n            setStartTime(new Date().getTime())\r\n    }, [popupState])\r\n\r\n    useEffect(() => { // Once the finishTime state is updated calculate the total time\r\n        setTimeTaken(Math.round( ( ( (finishTime - startTime) / 1000) + Number.EPSILON) * 100) / 100 )\r\n    }, [finishTime])\r\n    \r\n    useEffect(() => {\r\n        if( (difficulty <= levels  && timeTaken !== null && timeTaken !== 0 ) ) { // Don't create attempt when all levels have been cleared or when timer is being initialized\r\n            CreateAttempt()\r\n            if(levelCompleted === 'True') { // If level was completed set it back to false for next level and increment the difficulty\r\n                if(user === false) { // If no user is logged in, store progress in local storage\r\n                    updateLocalProgress(currentPlayer.player.NickName, difficulty, props.SkillName, props.GameName)\r\n                }\r\n                setDifficulty(difficulty + 1)\r\n                setLevelCompleted('False')\r\n            }\r\n        }\r\n    }, [timeTaken])\r\n\r\n    return(\r\n        <div className=\"game-background\">\r\n            {props.backButton}\r\n            <GamePopup open={popupState} setOpen={setPopupState} gameTitle={gameTitle} levelsCleared={difficulty} numLevels={levels} levelPassed={attemptNumber < 1} />\r\n                <props.Game setFinishTime={setFinishTime} difficulty={difficulty} setLevelCompleted={setLevelCompleted} setPopupState={setPopupState} setAttemptNumber={setAttemptNumber} {...props} />\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\SkillNavigationPage.js",["251","252"],"import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport { GetLevelProgressURL } from '../components/Request-URL'\r\nimport { useAuthPlayer, useAuthUser } from '../libs'\r\nimport LevelNavComponent from '../components/LevelNavComponent'\r\nimport { getLocalPlayer } from '../components/localstorage/Local-Storage-Functions'\r\n\r\nexport default function SkillNavigationPage(props) {\r\n\r\n    const levelList = props.Levels;\r\n    const currentPlayer = useAuthPlayer()\r\n    const user = useAuthUser()\r\n\r\n    const [progress, setProgress] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    function getLevelProgress(GameName) {\r\n        let total = 0\r\n        for (let i = 0; i < progress.length; i++) {\r\n            if (progress[i].GameName === GameName) {\r\n                total += progress[i].LevelsCompleted\r\n            }\r\n        }\r\n        return total\r\n    }\r\n\r\n    const GetLevelprogress = () => {\r\n        if(user !== false) { // If using a logged in account, get progress from DB\r\n            Axios.post(GetLevelProgressURL, {\r\n                UserName: user.attributes.sub,\r\n                NickName: currentPlayer.player.NickName,\r\n                SkillName: props.SkillName\r\n            }).then((response) => {\r\n                setProgress(response.data);\r\n            }).catch((error) => {\r\n                setErrorMessage(error)\r\n            })\r\n        }\r\n        else if(user === false) { // If not using an account and not logged in, get progress from local storage\r\n            const localPlayer = getLocalPlayer(currentPlayer.player.NickName)\r\n            const localPlayerProgress = localPlayer.Progress;\r\n            let localProgress = []\r\n\r\n            for(let skillKey in localPlayerProgress) {\r\n                if(localPlayerProgress.hasOwnProperty(skillKey)) {\r\n                    for(let gameKey in localPlayerProgress[skillKey]) {\r\n                        const localLevelsCompleted = parseInt(localPlayerProgress[skillKey][gameKey])\r\n                        localProgress.push({ 'GameName': gameKey, 'LevelsCompleted': localLevelsCompleted })\r\n                    }\r\n                }\r\n            }\r\n\r\n            setProgress(localProgress)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetLevelprogress()\r\n    }, [])\r\n    \r\n    return(\r\n        <LevelNavComponent Levels={levelList} getProgress={getLevelProgress} />\r\n    )\r\n}","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Level-List.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\ThrowEyesImages.js",["253"],"import { shuffleArray, assignThrowEyesValues, sortThrowEyesImages } from './Image-Functions';\r\n\r\nconst importAll = require =>\r\n  require.keys().reduce((acc, next) => {\r\n    acc[next.replace(\"./\", \"\")] = require(next);\r\n    return acc;\r\n  }, {});\r\n\r\nconst imageModules = importAll(\r\n  require.context('../../assets/games/hotspot/Throw_Eyes/', false, /\\.(png|jpe?g|svg)$/)\r\n);\r\n\r\nlet images = Object.values(imageModules);\r\nimages = assignThrowEyesValues(images);\r\nlet HotSpotThrowEyes = sortThrowEyesImages(images);\r\n//HotSpotThrowEyes = shuffleArray(HotSpotThrowEyes);\r\n\r\nexport {\r\n    HotSpotThrowEyes,\r\n}\r\n","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\CardsGameImages.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\MixAndMatchImages.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Back-Button.js",["254"],"import React from 'react'\r\nimport './Back-Button.scss'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FiArrowLeftCircle } from 'react-icons/fi'\r\n\r\nexport default function BackButton() {\r\n    let navigate = useNavigate();\r\n    return (\r\n        <div>\r\n            <a id=\"Back-Button\" onClick={() => navigate(-1)}>\r\n                <FiArrowLeftCircle id=\"Back\" size={130} />\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\games\\Throw-Eyes.js",["255","256","257","258","259","260","261","262","263"],"import React, { useState, useEffect } from 'react'\r\nimport Character from '../../components/throweyes/Character'\r\nimport Target from '../../components/throweyes/Target'\r\nimport { returnRandomThrowEyesChar } from '../../components/images/Image-Functions'\r\nimport './Throw-Eyes.scss'\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\nexport default function ThrowEyes(props) {\r\n    \r\n    const difficulty = props.difficulty\r\n    const levels = props.numLevels\r\n\r\n    const [character, setCharacter] = useState(setChar())\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    \r\n    const easyTargets = [false,true,false,true,false];\r\n    const mediumTargets = [false,true,true,true,false];\r\n    const hardTargets = [true,true,true,true,true];\r\n\r\n    useEffect(() => {\r\n        setChar()\r\n    }, [difficulty])\r\n\r\n    function setChar() {\r\n        if(difficulty === 1) {\r\n            return returnRandomThrowEyesChar(props.shuffledImages.easy)\r\n        }\r\n        else if (difficulty === 2) {\r\n            return returnRandomThrowEyesChar(props.shuffledImages.medium)\r\n        }\r\n        else if (difficulty === 3) {\r\n            return returnRandomThrowEyesChar(props.shuffledImages.hard)\r\n        }\r\n    }\r\n\r\n    function winCondition(targetID) {\r\n        props.setFinishTime(new Date().getTime()) // When user clicks an option set the finish time\r\n        \r\n        if(targetID === character.id) {\r\n            props.setLevelCompleted('True')\r\n            props.setPopupState(true)\r\n            props.setAttemptNumber(0)\r\n            setCharacter(setChar())\r\n        }\r\n        else {\r\n            setCharacter(setChar())\r\n            props.setAttemptNumber(props.attemptNumber + 1)\r\n            props.setPopupState(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container-fluid\">\r\n        {difficulty <= levels &&\r\n            <>\r\n                <Character image={character.default} />\r\n                {difficulty === 1 && \r\n                    <div className=\"row justify-content-center\">\r\n                        {easyTargets.map((target, i) => ( \r\n                        <div class=\"col-lg-2\">\r\n                            {target == true ?  <a onClick={() => winCondition(i+1)}> <Target image={props.shuffledImages.target.default} targetID={character.id} /> </a> : <span></span> }\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                }\r\n                {difficulty === 2 &&\r\n                    <div className=\"row justify-content-center\">\r\n                        {mediumTargets.map((target, i) => ( \r\n                        <div class=\"col-lg-2\">\r\n                            {target == true ?  <a onClick={() => winCondition(i+1)}> <Target image={props.shuffledImages.target.default} targetID={character.id} /> </a> : <span></span> }\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                }\r\n                {difficulty === 3 &&\r\n                    <div className=\"row justify-content-center\">\r\n                        {hardTargets.map((target, i) => ( \r\n                        <div class=\"col-lg-2\">\r\n                            {target == true ?  <a onClick={() => winCondition(i+1)}> <Target image={props.shuffledImages.target.default} targetID={character.id} /> </a> : <span></span> }\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                }\r\n            </>\r\n        }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\games\\CardsGame.js",["264","265","266","267","268"],"import React, { useEffect, useState } from 'react'\r\nimport { shuffleArray } from '../../components/images/Image-Functions'\r\nimport SimpleBar from 'simplebar-react';\r\nimport './CardsGame.scss'\r\n\r\nexport default function CardsGame(props) {\r\n\r\n    const [currentCards, setCurrentCards] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const difficulty = props.difficulty\r\n    const levels = props.numLevels\r\n\r\n    useEffect(() => {\r\n        shuffleArray(props.shuffledImages.incorrect)\r\n        ShuffleCards()\r\n    }, [difficulty])\r\n\r\n    const ShuffleCards = () => {\r\n        let dummy = []\r\n        if(difficulty === 1) {\r\n            dummy = props.shuffledImages.correct\r\n            dummy = dummy.concat(props.shuffledImages.incorrect.slice(0, 2))\r\n            shuffleArray(dummy)\r\n            setCurrentCards(dummy)\r\n        }\r\n        else if(difficulty === 2) {\r\n            dummy = props.shuffledImages.correct\r\n            dummy = dummy.concat(props.shuffledImages.incorrect.slice(0, 4))\r\n            shuffleArray(dummy)\r\n            setCurrentCards(dummy)\r\n        }\r\n        else if(difficulty === 3) {\r\n            dummy = props.shuffledImages.correct\r\n            dummy = dummy.concat(props.shuffledImages.incorrect.slice(0, props.shuffledImages.incorrect.length))\r\n            shuffleArray(dummy)\r\n            setCurrentCards(dummy)\r\n        }\r\n    }\r\n\r\n    const WinCondition = (selection) => {\r\n        props.setFinishTime(new Date().getTime()) // When user clicks an option set the finish time\r\n        \r\n        if(selection === 'true') {\r\n            props.setLevelCompleted('True')\r\n            props.setPopupState(true)\r\n            props.setAttemptNumber(0)\r\n            ShuffleCards()\r\n        }\r\n        else {\r\n            ShuffleCards()\r\n            props.setAttemptNumber(props.attemptNumber + 1)\r\n            props.setPopupState(true)\r\n        }\r\n    }\r\n\r\n    // Hook\r\n    function useWindowSize() {\r\n        // Initialize state with undefined width/height so server and client renders match\r\n        // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n        const [windowSize, setWindowSize] = useState({\r\n            width: undefined,\r\n            height: undefined,\r\n        });\r\n\r\n        useEffect(() => {\r\n            // Handler to call on window resize\r\n            function handleResize() {\r\n            // Set window width/height to state\r\n                setWindowSize({\r\n                    width: window.innerWidth,\r\n                    height: window.innerHeight,\r\n                });\r\n            }\r\n            \r\n            // Add event listener\r\n            window.addEventListener(\"resize\", handleResize);\r\n            // Call handler right away so state gets updated with initial window size\r\n            handleResize();\r\n            // Remove event listener on cleanup\r\n            return () => window.removeEventListener(\"resize\", handleResize);\r\n        }, []); // Empty array ensures that effect is only run on mount\r\n\r\n        return windowSize;\r\n    }\r\n\r\n    function SetRowJustification(width) { // cards are cut off by the simplebar component when statically defined as centered, this is a solution\r\n        if( (width < 1000 && currentCards.length === 3) || (width < 1668 && currentCards.length === 5) || (currentCards.length > 5) ) {\r\n            return '';\r\n        } else\r\n            return 'justify-content-center';\r\n    }\r\n\r\n    console.log(SetRowJustification(useWindowSize().width))\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row justify-content-center\">\r\n                <SimpleBar style={{ width: '70vw' }} autoHide={false}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className={`row ${SetRowJustification(useWindowSize().width)}`}>\r\n                            <div className=\"d-flex\">\r\n                                {difficulty <= levels &&\r\n                                    <>\r\n                                        {currentCards.map((image, i) => {\r\n                                            return(\r\n                                                <div key={i} className=\"card-option mr-2\">\r\n                                                    <a onClick={() => WinCondition(image.correct)} >\r\n                                                        <img src={image.default} />\r\n                                                    </a>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </SimpleBar>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\atgle\\project321\\321-Project\\src\\pages\\games\\MixAndMatch.js",["269","270","271","272","273","274","275","276","277"],"import React, { useState, useEffect } from \"react\"\r\nimport Source from \"../../components/mixandmatch/Source\"\r\nimport Target from \"../../components/mixandmatch/Target\"\r\nimport { shuffleArray } from '../../components/images/Image-Functions'\r\nimport { ItemTypes } from '../../components/DragItemTypes'\r\n//import SimpleBar from 'simplebar-react';\r\nimport './MixAndMatch.scss'\r\nimport 'simplebar/dist/simplebar.min.css';\r\n\r\n//Known issue with Mix and Match, problem with drag and drop component when you drag the correct right card and then the correct left card if using {difficulty === 1 && } logic, find fix later\r\nexport default function MixAndMatch(props) {\r\n\r\n    const difficulty = props.difficulty\r\n    const levels = props.numLevels;\r\n\r\n    const [droppedItemPanel1, setDroppedItemPanel1] = useState({})\r\n    const [droppedItemPanel2, setDroppedItemPanel2] = useState({})\r\n    const [droppedItemPanel3, setDroppedItemPanel3] = useState({})\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    onDropPanel1 = onDropPanel1.bind(this)\r\n    onDropPanel2 = onDropPanel2.bind(this)\r\n    onDropPanel3 = onDropPanel3.bind(this)\r\n\r\n    useEffect(() => {\r\n      if(difficulty >= 2 ) {\r\n        winCondition()\r\n      }\r\n    }, [droppedItemPanel1, droppedItemPanel2, droppedItemPanel3])\r\n\r\n    useEffect(() => {\r\n      if(props.popupState === false) {\r\n        clearDroppedCards()\r\n        randomizeImages()\r\n        props.setStartTime(new Date().getTime())\r\n      }\r\n    }, [props.popupState])\r\n  \r\n    function onDropPanel1(item) {\r\n      setDroppedItemPanel1(item)\r\n    }\r\n    function onDropPanel2(item) {\r\n      setDroppedItemPanel2(item)\r\n    }\r\n    function onDropPanel3(item) {\r\n      setDroppedItemPanel3(item)\r\n    }\r\n\r\n    function randomizeImages() {\r\n      if(difficulty === 1) {\r\n        props.shuffledImages.easy = shuffleArray(props.shuffledImages.easy)\r\n      }\r\n      if(difficulty === 2) {\r\n        props.shuffledImages.medium.Panel1 = shuffleArray(props.shuffledImages.medium.Panel1)\r\n        props.shuffledImages.medium.Panel2 = shuffleArray(props.shuffledImages.medium.Panel2)\r\n      }\r\n      if(difficulty === 3) {\r\n        props.shuffledImages.hard.Panel1 = shuffleArray(props.shuffledImages.hard.Panel1)\r\n        props.shuffledImages.hard.Panel2 = shuffleArray(props.shuffledImages.hard.Panel2)\r\n        props.shuffledImages.hard.Panel3 = shuffleArray(props.shuffledImages.hard.Panel3)\r\n      }\r\n    }\r\n\r\n    function clearDroppedCards() {\r\n      setDroppedItemPanel1({})\r\n      setDroppedItemPanel2({})\r\n      if(difficulty === 3) {\r\n        setDroppedItemPanel3({})\r\n      }\r\n    }\r\n\r\n    function winCondition(selection) {\r\n      \r\n      if(difficulty === 1) {\r\n        props.setFinishTime(new Date().getTime()) // When user clicks an option set the finish time\r\n          if(selection === 'true') {\r\n            props.setLevelCompleted('True')\r\n            props.setPopupState(true)\r\n            props.setAttemptNumber(0)\r\n        }\r\n        else if(selection === 'false') {\r\n          props.setAttemptNumber(props.attemptNumber + 1)\r\n          props.setPopupState(true)\r\n          randomizeImages()\r\n        }\r\n      }\r\n\r\n      else {\r\n        if(difficulty === 2) {\r\n          if( ((Object.keys(droppedItemPanel1).length !== 0 && droppedItemPanel1.constructor === Object) && (Object.keys(droppedItemPanel2).length !== 0 && droppedItemPanel2.constructor === Object))) {\r\n            props.setFinishTime(new Date().getTime()) // When user clicks an option set the finish time\r\n            if(droppedItemPanel1.correct === 'true' && droppedItemPanel2.correct === 'true') {\r\n              props.setLevelCompleted('True')\r\n              props.setPopupState(true)\r\n              props.setAttemptNumber(0)\r\n            } \r\n            else if( (droppedItemPanel1.correct === 'false' || droppedItemPanel2.correct === 'false') ) {\r\n              props.setAttemptNumber(props.attemptNumber + 1)\r\n              props.setPopupState(true)\r\n            }\r\n            clearDroppedCards()\r\n            randomizeImages()\r\n          }\r\n        }\r\n        if(difficulty === 3) {\r\n          if( ((Object.keys(droppedItemPanel1).length !== 0 && droppedItemPanel1.constructor === Object) && (Object.keys(droppedItemPanel2).length !== 0 && droppedItemPanel2.constructor === Object) && (Object.keys(droppedItemPanel3).length !== 0 && droppedItemPanel3.constructor === Object))) {\r\n            props.setFinishTime(new Date().getTime()) // When user clicks an option set the finish time\r\n            if(droppedItemPanel1.correct === 'true' && droppedItemPanel2.correct === 'true' && droppedItemPanel3.correct === 'true') {\r\n              props.setLevelCompleted('True')\r\n              props.setPopupState(true)\r\n              props.setAttemptNumber(0)\r\n            } \r\n            else if( (droppedItemPanel1.correct === 'false' || droppedItemPanel2.correct === 'false' || droppedItemPanel3.correct === 'false') ) {\r\n              props.setAttemptNumber(props.attemptNumber + 1)\r\n              props.setPopupState(true)\r\n            }\r\n            clearDroppedCards()\r\n            randomizeImages()\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {difficulty <= levels &&\r\n        <>\r\n          {difficulty === 1 &&\r\n            <div className=\"container-fluid\">\r\n              <div className=\"d-flex align-items-center justify-content-center\">\r\n                  {props.shuffledImages.easy.map((image, i) => {\r\n                      return(\r\n                          <div key={i} className=\"d-inline-flex card-option mr-2\">\r\n                              <a onClick={() => winCondition(image.correct)} >\r\n                                  <img src={image.default} />\r\n                              </a>\r\n                          </div>\r\n                      )\r\n                  })}\r\n              </div>\r\n            </div>\r\n          }\r\n          {difficulty > 1 &&\r\n          <div className=\"container\">\r\n            {props.vertical ? \r\n            <>\r\n              <div className=\"row align-items-center\">\r\n                  <div className=\"col-lg align-self-center\">\r\n                  \r\n                  {difficulty === 2 &&\r\n                  <>\r\n                    <div className= \"row justify-content-center vertical-match\">\r\n                      <Target position={ItemTypes.CARDPANEL1} droppedItem={droppedItemPanel1} onDrop={onDropPanel1} />\r\n                    </div>\r\n                    <div className= \"row justify-content-center vertical-match\">\r\n                      <Target position={ItemTypes.CARDPANEL2} droppedItem={droppedItemPanel2} onDrop={onDropPanel2} />\r\n                    </div>\r\n                  </>\r\n                  }\r\n                  {difficulty === 3 &&\r\n                  <>\r\n                    <div className= \"row justify-content-center vertical-match\">\r\n                      <Target position={ItemTypes.CARDPANEL1} droppedItem={droppedItemPanel1} onDrop={onDropPanel1} />\r\n                    </div>\r\n                    <div className= \"row justify-content-center vertical-match\">\r\n                      <Target position={ItemTypes.CARDPANEL2} droppedItem={droppedItemPanel2} onDrop={onDropPanel2} />\r\n                    </div>\r\n                    <div className= \"row justify-content-center vertical-match\">\r\n                      <Target position={ItemTypes.CARDPANEL3} droppedItem={droppedItemPanel3} onDrop={onDropPanel3} />\r\n                    </div>\r\n                  </>\r\n                  }\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                  \r\n                  {difficulty === 2 &&\r\n                  <>\r\n                    <div className=\"row vertical-match\">\r\n                      {props.shuffledImages.medium.Panel1.map((image) => (\r\n                        <Source image={image.default} correct={image.correct} position={image.position} />\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"row vertical-match\">\r\n                      {props.shuffledImages.medium.Panel2.map((image) => (\r\n                        <Source image={image.default} correct={image.correct} position={image.position} />\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                  }\r\n                  \r\n                  {difficulty === 3 &&\r\n                  <>\r\n                    <div className=\"row vertical-match\">\r\n                      {props.shuffledImages.hard.Panel1.map((image) => (\r\n                        <Source image={image.default} correct={image.correct} position={image.position} />\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"row vertical-match\">\r\n                      {props.shuffledImages.hard.Panel2.map((image) => (\r\n                        <Source image={image.default} correct={image.correct} position={image.position} />\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"row vertical-match\">\r\n                      {props.shuffledImages.hard.Panel3.map((image) => (\r\n                        <Source image={image.default} correct={image.correct} position={image.position} />\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                  }\r\n\r\n                </div>\r\n                </>\r\n                :\r\n                <>\r\n                <div className=\"row align-items-center\">\r\n\r\n                  <div className=\"col-lg-4 align-self-center horizontal-match\">\r\n                    {props.shuffledImages.medium.Panel1.map((image) => (\r\n                    <div className=\"row justify-content-center\">\r\n                      <Source image={image.default} correct={image.correct} position={image.position} />\r\n                    </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  <div className= \"row justify-content-center horizontal-match\">\r\n                    <Target position={ItemTypes.CARDPANEL1} droppedItem={droppedItemPanel1} onDrop={onDropPanel1} />\r\n                    <Target position={ItemTypes.CARDPANEL2} droppedItem={droppedItemPanel2} onDrop={onDropPanel2} />\r\n                  </div>\r\n\r\n                  <div className=\"col-lg-4 align-self-center horizontal-match\">\r\n                    {props.shuffledImages.medium.Panel2.map((image) => (\r\n                      <div className=\"row justify-content-center\">\r\n                        <Source image={image.default} correct={image.correct} position={image.position} />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                </div>\r\n                </>\r\n            }\r\n          </div>\r\n          }\r\n          </>\r\n        }\r\n      </>\r\n    )\r\n}\r\n","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\Monster-Images.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\components\\LevelNavbar.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\components\\images\\Image-Functions.js",["278","279","280","281","282","283","284","285","286","287","288","289","290","291","292"],"\r\nfunction assignMaMValues(keys, array) {\r\n    for (let i = 0; i < array.length; i++) {\r\n        array[i] = splitMaMString(keys[i], array[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction splitMaMString(string, object) {\r\n    string = string.split(\".\");\r\n    string = string[0].split(\"_\");\r\n\r\n    const level = string[2].substr(string[2].length - 1, string[2].length)\r\n    object.difficulty = parseInt(level)\r\n\r\n    if(level == 1) {\r\n        if(string[3].substr(0, string[3].length - 1) === 'Correct') {\r\n            object.correct = 'true';\r\n        } else \r\n            object.correct = 'false';\r\n    } \r\n    else if (level > 1) {\r\n        if(string[3] === 'panel1') {\r\n            object.position = 'Panel1';\r\n        } else if(string[3] === 'panel2') {\r\n            object.position = 'Panel2';\r\n        } else if(string[3] === 'panel3') {\r\n            object.position = 'Panel3';\r\n        }\r\n        if(string[4].substr(0, string[4].length - 1) === 'Correct') {\r\n            object.correct = 'true';\r\n        } else {\r\n            object.correct = 'false';\r\n        }\r\n    }\r\n\r\n    return object;\r\n}\r\n\r\nfunction assignCardsValues(keys, array) {\r\n    for (let i = 0; i < array.length; i++) {\r\n        splitCardsString(keys[i], array[i]);\r\n    }\r\n    \r\n    return array;\r\n}\r\n\r\nfunction splitCardsString(string, object) {\r\n    string = string.split(\".\");\r\n    string = string[0].split(\"_\");\r\n    \r\n    if(string[2].substr(0, string[2].length - 1) == 'Correct') {\r\n        object.correct = 'true';\r\n    } else {\r\n        object.correct = 'false';\r\n    }\r\n\r\n    return object;\r\n}\r\n\r\nfunction assignThrowEyesValues(array) {\r\n    for (let i = 0; i < array.length; i++) {\r\n        splitThrowEyesString(array[i].default, array[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction splitThrowEyesString(string, object) {\r\n    string = string.split(\"/\");\r\n    string = string[3].split(\".\");\r\n    string = string[0].split(\"_\");\r\n\r\n    if(string.length < 4) {\r\n        object.type = 'Target';\r\n    } else {\r\n        object.type = 'Character';\r\n        object.eyePosition = string[3];\r\n        object.id = eyePosition(string[3]);\r\n    }\r\n\r\n    return object;\r\n}\r\n\r\nfunction eyePosition(position) {\r\n    switch(position) {\r\n        case 'FarLeft':\r\n            return 1;\r\n        case 'Left':\r\n            return 2;\r\n        case 'Center':\r\n            return 3;\r\n        case 'Right':\r\n            return 4;\r\n        case 'FarRight':\r\n            return 5;\r\n    }\r\n}\r\n\r\nfunction sortThrowEyesImages(array) {\r\n    let sortedArray = [];\r\n    let easyArray = [];\r\n    let mediumArray = [];\r\n    let hardArray = [];\r\n\r\n    let easy = 0;\r\n    let medium = 0;\r\n    let hard = 0;\r\n\r\n    for(let i = 0; i < array.length; i++) {\r\n        if(array[i].type == 'Character') {\r\n            if (array[i].eyePosition == 'Left' || array[i].eyePosition == 'Right') \r\n                easyArray[easy++] = array[i];\r\n            if (array[i].eyePosition == 'Left' || array[i].eyePosition == 'Right' || array[i].eyePosition == 'Center') \r\n                mediumArray[medium++] = array[i];\r\n            hardArray[hard++] = array[i];\r\n        } else {\r\n            sortedArray.target = array[i];\r\n        }\r\n    }\r\n\r\n    sortedArray.easy = easyArray;\r\n    sortedArray.medium = mediumArray;\r\n    sortedArray.hard = hardArray;\r\n\r\n    return sortedArray;\r\n}\r\n\r\n\r\nfunction shuffleArray(array) {\r\n    let i = array.length - 1;\r\n    for (; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction returnRandomThrowEyesChar(array) {\r\n    shuffleArray(array);\r\n    return array[0];\r\n}\r\n\r\nfunction sortMaMImages(array) {\r\n    let sortedArray = [];\r\n    let difficulty1Array = [];\r\n    let difficulty2Array = [];\r\n    let difficulty3Array = [];\r\n\r\n    let panel1Array = new Array(2);\r\n    let panel2Array = new Array(2);\r\n    let panel3Array = new Array(2);\r\n\r\n    for(let i = 0; i < 2; i++) {\r\n        panel1Array[i] = new Array(0);\r\n        panel2Array[i] = new Array(0);\r\n        panel3Array[i] = new Array(0);\r\n    }\r\n    \r\n    let difficulty1Count = 0;\r\n\r\n    for(let i = 0; i < array.length; i++) {\r\n        const difficulty = array[i].difficulty\r\n        if(difficulty === 1) {\r\n            difficulty1Array[difficulty1Count] = array[i];\r\n            difficulty1Count++;\r\n        }\r\n        if(difficulty === 2) {\r\n            if(array[i].position == 'Panel1') {\r\n                panel1Array[0].push(array[i]);\r\n            } else if(array[i].position == 'Panel2') {\r\n                panel2Array[0].push(array[i]);\r\n            }\r\n        }\r\n        if(difficulty === 3) {\r\n            if(array[i].position == 'Panel1') {\r\n                panel1Array[1].push(array[i]);\r\n            } else if(array[i].position == 'Panel2') {\r\n                panel2Array[1].push(array[i]);\r\n            } else if(array[i].position == 'Panel3') {\r\n                panel3Array[1].push(array[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    difficulty2Array.Panel1 = panel1Array[0];\r\n    difficulty2Array.Panel2 = panel2Array[0];\r\n\r\n    difficulty3Array.Panel1 = panel1Array[1];\r\n    difficulty3Array.Panel2 = panel2Array[1];\r\n    difficulty3Array.Panel3 = panel3Array[1];\r\n\r\n    sortedArray.easy = difficulty1Array;\r\n    sortedArray.medium = difficulty2Array;\r\n    sortedArray.hard = difficulty3Array;\r\n\r\n    return sortedArray;\r\n}\r\n\r\n\r\nfunction sortCardsArray(array) {\r\n    let sortedArray = [];\r\n    let correctArray = []; //correct and incorrect refer to the card options\r\n    let incorrectArray = [];\r\n    \r\n    let correct = 0;\r\n    let incorrect = 0;\r\n\r\n    for(let i = 0; i < array.length; i++) {\r\n        if(array[i].correct == 'true') {\r\n            correctArray[correct] = array[i];\r\n            correct++;\r\n        } else {\r\n            incorrectArray[incorrect] = array[i];\r\n            incorrect++;\r\n        }\r\n    }\r\n\r\n    sortedArray.correct = correctArray;\r\n    sortedArray.incorrect = incorrectArray;\r\n\r\n    return sortedArray;\r\n}\r\n\r\nexport {\r\n    assignMaMValues,\r\n    assignCardsValues,\r\n    sortCardsArray,\r\n    shuffleArray,\r\n    sortMaMImages,\r\n    assignThrowEyesValues,\r\n    sortThrowEyesImages,\r\n    returnRandomThrowEyesChar\r\n}\r\n","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\LevelNavComponent.js",["293"],"import React from 'react'\r\nimport { RiUserFill } from 'react-icons/ri'\r\nimport { TiTick } from 'react-icons/ti'\r\nimport { BsArrowRightShort } from 'react-icons/bs'\r\nimport SimpleBar from 'simplebar-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuthPlayer } from '../libs/'\r\nimport LevelNavbar from '../components/LevelNavbar'\r\nimport 'simplebar/dist/simplebar.min.css'\r\n\r\nexport default function LevelNavigationPage(props) {\r\n\r\n    const currentPlayer = useAuthPlayer()\r\n\r\n    return (\r\n        <div id=\"Level-Nav-Background\">\r\n            <div className=\"container\">\r\n                <div className=\"d-flex flex-wrap mb-3\">\r\n                    <div className=\"mr-auto\">\r\n                        <h1 id=\"Level-Navigation-Title\">JumpStart</h1>\r\n                    </div>\r\n                    <div id=\"Current-Player\" className=\"align-self-center\"> \r\n                        <RiUserFill />{currentPlayer.player.NickName}\r\n                    </div>\r\n                </div>\r\n                <LevelNavbar />\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <SimpleBar style={{ height: '60vh' }} autoHide={false}>\r\n                    <div id=\"Level-Nav\">\r\n                        <div className= \"d-flex flex-wrap justify-content-around\">\r\n                            {props.Levels.map((level,i) => {\r\n                                return (    \r\n                                    <Link to={level.to} key={i}>\r\n                                        <div className={`d-inline-flex justify-content-center align-items-center mr-4 mb-5 Game-Container ${props.getProgress(level.name) >= level.numLevels ? 'green' : 'orange' }`}>\r\n                                            <div className=\"nav-item\" id={\"Game-\"+level.id}>\r\n                                                <div className=\"d-flex justify-content-end\">\r\n                                                    <div className=\"d-inline-flex nav-item-svg\">\r\n                                                        {props.getProgress(level.name) >= level.numLevels ? <TiTick size={40} /> : <BsArrowRightShort size={40} /> }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"d-flex justify-content-center\"><img src={level.monster} /></div>\r\n                                                <div className=\"d-flex justify-content-center level-name\">{level.name}</div>\r\n                                                <div className=\"d-flex justify-content-center level-progress\">{`${props.getProgress(level.name)} of ${level.numLevels} completed`}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </SimpleBar>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\Game-Popup.js",["294","295","296","297"],"import React from 'react'\r\nimport Popup from 'reactjs-popup'\r\nimport './Game-Popup.scss'\r\nimport { BsStarFill, BsStar } from 'react-icons/bs'\r\nimport { TiHome, TiArrowBack } from 'react-icons/ti'\r\nimport { FaPlay } from 'react-icons/fa'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction returnStars(props) {\r\n    let stars = [];\r\n    for(let i = 0; i < props.numLevels; i++) {\r\n        if(i + 1 < props.levelsCleared) {\r\n            stars[i] = <BsStarFill />\r\n        }\r\n        else if(i + 1 === props.levelsCleared) {\r\n            stars[i] = <BsStarFill activestar=\" activestar\" />\r\n        }\r\n        else {\r\n            stars[i] = <BsStar />\r\n        }\r\n    }\r\n    return stars;\r\n}\r\n\r\nexport default function GamePopup(props) {\r\n    \r\n    let navigate = useNavigate();\r\n\r\n    return(\r\n        <Popup open={props.open} closeOnDocumentClick={false} closeOnEscape={false} lockScroll={true} modal>\r\n            {close => (\r\n                <>\r\n                {props.levelPassed ?\r\n                    <div className=\"game-popup container\">\r\n                        <div className=\"header col-lg-12\">\r\n                            <h1 className=\"row justify-content-center\">{props.gameTitle}</h1>\r\n                        </div>\r\n                        <div className=\"content col-lg-12\">\r\n                            <div className=\"row justify-content-center\">\r\n                                {returnStars(props).map((star,i) =>\r\n                                    <div key={i} className={star.props.activestar}>\r\n                                        {star}\r\n                                    </div>\r\n                                )\r\n                                }\r\n                            </div>\r\n                            {props.levelsCleared > props.numLevels ? <h2 id=\"Level-Text\" className=\"row justify-content-center\">You did it!</h2> : <h2 id=\"Level-Text\" className=\"row justify-content-center\">Level {props.levelsCleared}</h2> }\r\n                        </div>\r\n\r\n                        {props.levelsCleared > props.numLevels ?\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <a\r\n                                    id=\"Popup-Home-Button\"\r\n                                    onClick={() => {\r\n                                        navigate(-1)\r\n                                    }}\r\n                                >\r\n                                    <span>Home</span><span id=\"Play-Icon\"><TiHome /></span>\r\n                                </a>\r\n                            </div>\r\n                            :\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <a\r\n                                    id=\"Popup-Play-Button\"\r\n                                    onClick={() => {\r\n                                        close()\r\n                                        props.setOpen(false)\r\n                                    }}\r\n                                >\r\n                                    <span>Play</span><span id=\"Play-Icon\"><FaPlay /></span>\r\n                                </a>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    :\r\n\r\n                    <div className=\"game-popup container\">\r\n                        <div className=\"header col-lg-12\">\r\n                            <h1 className=\"row justify-content-center\">{props.gameTitle}</h1>\r\n                        </div>\r\n                        <div className=\"content col-lg-12\">\r\n                            <div className=\"row justify-content-center\">\r\n                                {returnStars(props).map((star, i) =>\r\n                                    <div key={i} className={star.props.activestar}>\r\n                                        {star}\r\n                                    </div>\r\n                                )\r\n                                }\r\n                            </div>\r\n                            {props.levelsCleared > props.numLevels ? <h2 id=\"Level-Text\" className=\"row justify-content-center\">Try Again!</h2> : <h2 id=\"Level-Text\" className=\"row justify-content-center\">Level {props.levelsCleared}</h2> }\r\n                        </div>\r\n                        \r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <a\r\n                                id=\"Popup-Play-Button\"\r\n                                onClick={() => {\r\n                                    close()\r\n                                    props.setOpen(false)\r\n                                }}\r\n                            >\r\n                                <span>Retry</span><span id=\"Play-Icon\"><FaPlay /></span>\r\n                            </a>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n                </>\r\n            )}\r\n        </Popup>\r\n    );\r\n}\r\n","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\DragItemTypes.js",[],"C:\\Users\\atgle\\project321\\321-Project\\src\\components\\mixandmatch\\Target.js",["298","299"],"import React, { Component } from \"react\";\r\nimport { DropTarget } from \"react-dnd\";\r\nimport \"./Target.scss\";\r\n\r\nclass Target extends Component {\r\n\r\n  render() {\r\n      const { isOver, canDrop, connectDropTarget, droppedItem } = this.props;\r\n      let className = \"\";\r\n      if (isOver && canDrop) {\r\n          className = \"green\";\r\n      } else if (!isOver && canDrop) {\r\n          className = \"yellow\";\r\n      } else if (isOver && !canDrop) {\r\n          className = \"red\";\r\n      }\r\n\r\n      return connectDropTarget(\r\n          <div id={this.props.position == 'Left' ? 'Left-Target' : 'Right-Target'} className={`target ${className}`} correct={droppedItem.correct}>\r\n              <img src={droppedItem.image} />\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst spec = {\r\n  drop(props, monitor, component) {\r\n    const item = monitor.getItem();\r\n    props.onDrop(item);\r\n  }\r\n};\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver(),\r\n    isOverCurrent: monitor.isOver({ shallow: true }),\r\n    canDrop: monitor.canDrop()\r\n  };\r\n}\r\n\r\nconst position = {\r\n  getPosition(props) {\r\n    const item = props.position;\r\n    return item;\r\n  }\r\n};\r\n\r\nexport default DropTarget(position.getPosition, spec, collect)(Target);\r\n","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\mixandmatch\\Source.js",["300"],"import React, { Component } from \"react\";\r\nimport { DragSource } from \"react-dnd\";\r\nimport \"./Source.scss\";\r\n\r\nclass Source extends Component {\r\n  render() {\r\n    const { image, connectDragSource } = this.props;\r\n    return connectDragSource(<div className=\"square\"><img src={image} /></div>);\r\n  }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource()\r\n  };\r\n}\r\n\r\nconst cardSource = {\r\n  beginDrag(props, monitor, component) {\r\n    const item = {  image: props.image,\r\n                    correct: props.correct    };\r\n    return item;\r\n  }\r\n};\r\n\r\nconst position = {\r\n  getPosition(props) {\r\n    const item = props.position;\r\n    return item;\r\n  }\r\n};\r\n\r\nexport default DragSource(position.getPosition, cardSource, collect)(Source);\r\n","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\throweyes\\Target.js",["301"],"import React from 'react'\r\nimport './Target.scss'\r\n\r\n\r\nexport default class Target extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <img src={this.props.image} class=\"Throw-Eyes-Target\" targetID={this.props.targetID} />\r\n        )\r\n    }\r\n}","C:\\Users\\atgle\\project321\\321-Project\\src\\components\\throweyes\\Character.js",["302","303"],"import React from 'react'\r\nimport './Character.scss'\r\n\r\nexport default class Character extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"row justify-content-md-center\">\r\n                <img src={this.props.image} id=\"Throw-Eyes-Character\" />\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\atgle\\project321\\321-Project\\src\\aws-exports.js",[],{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":3,"column":8,"nodeType":"310","messageId":"311","endLine":3,"endColumn":16},{"ruleId":"312","severity":1,"message":"313","line":71,"column":8,"nodeType":"314","endLine":71,"endColumn":10,"suggestions":"315"},{"ruleId":"312","severity":1,"message":"313","line":78,"column":8,"nodeType":"314","endLine":78,"endColumn":26,"suggestions":"316"},{"ruleId":"317","severity":1,"message":"318","line":109,"column":65,"nodeType":"319","endLine":109,"endColumn":116},{"ruleId":"320","severity":1,"message":"321","line":110,"column":69,"nodeType":"319","endLine":110,"endColumn":184},{"ruleId":"317","severity":1,"message":"318","line":117,"column":57,"nodeType":"319","endLine":117,"endColumn":87},{"ruleId":"312","severity":1,"message":"322","line":17,"column":24,"nodeType":"323","endLine":17,"endColumn":28},{"ruleId":"317","severity":1,"message":"318","line":44,"column":33,"nodeType":"319","endLine":44,"endColumn":36},{"ruleId":"317","severity":1,"message":"318","line":59,"column":37,"nodeType":"319","endLine":59,"endColumn":40},{"ruleId":"312","severity":1,"message":"324","line":44,"column":8,"nodeType":"314","endLine":44,"endColumn":22,"suggestions":"325"},{"ruleId":"312","severity":1,"message":"326","line":57,"column":8,"nodeType":"314","endLine":57,"endColumn":25,"suggestions":"327"},{"ruleId":"328","severity":1,"message":"329","line":60,"column":9,"nodeType":"330","messageId":"331","endLine":73,"endColumn":10},{"ruleId":"332","severity":1,"message":"333","line":80,"column":27,"nodeType":"334","messageId":"335","endLine":80,"endColumn":29},{"ruleId":"312","severity":1,"message":"336","line":82,"column":8,"nodeType":"314","endLine":82,"endColumn":32,"suggestions":"337"},{"ruleId":"312","severity":1,"message":"322","line":88,"column":24,"nodeType":"323","endLine":88,"endColumn":28},{"ruleId":"312","severity":1,"message":"338","line":119,"column":8,"nodeType":"314","endLine":119,"endColumn":28,"suggestions":"339"},{"ruleId":"317","severity":1,"message":"318","line":142,"column":49,"nodeType":"319","endLine":142,"endColumn":52},{"ruleId":"308","severity":1,"message":"340","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":21},{"ruleId":"317","severity":1,"message":"318","line":16,"column":33,"nodeType":"319","endLine":16,"endColumn":79},{"ruleId":"320","severity":1,"message":"321","line":17,"column":37,"nodeType":"319","endLine":17,"endColumn":114},{"ruleId":"317","severity":1,"message":"318","line":66,"column":13,"nodeType":"319","endLine":66,"endColumn":55},{"ruleId":"317","severity":1,"message":"318","line":73,"column":17,"nodeType":"319","endLine":73,"endColumn":48},{"ruleId":"317","severity":1,"message":"318","line":78,"column":17,"nodeType":"319","endLine":78,"endColumn":53},{"ruleId":"317","severity":1,"message":"318","line":83,"column":17,"nodeType":"319","endLine":83,"endColumn":43},{"ruleId":"317","severity":1,"message":"318","line":91,"column":13,"nodeType":"319","endLine":91,"endColumn":55},{"ruleId":"317","severity":1,"message":"318","line":107,"column":13,"nodeType":"319","endLine":107,"endColumn":55},{"ruleId":"317","severity":1,"message":"318","line":11,"column":13,"nodeType":"319","endLine":11,"endColumn":63},{"ruleId":"328","severity":1,"message":"329","line":9,"column":5,"nodeType":"330","messageId":"331","endLine":34,"endColumn":6},{"ruleId":"332","severity":1,"message":"333","line":60,"column":19,"nodeType":"334","messageId":"335","endLine":60,"endColumn":21},{"ruleId":"332","severity":1,"message":"333","line":7,"column":21,"nodeType":"334","messageId":"335","endLine":7,"endColumn":23},{"ruleId":"332","severity":1,"message":"333","line":7,"column":55,"nodeType":"334","messageId":"335","endLine":7,"endColumn":57},{"ruleId":"332","severity":1,"message":"333","line":7,"column":91,"nodeType":"334","messageId":"335","endLine":7,"endColumn":93},{"ruleId":"332","severity":1,"message":"333","line":7,"column":126,"nodeType":"334","messageId":"335","endLine":7,"endColumn":128},{"ruleId":"332","severity":1,"message":"333","line":13,"column":21,"nodeType":"334","messageId":"335","endLine":13,"endColumn":23},{"ruleId":"332","severity":1,"message":"333","line":13,"column":55,"nodeType":"334","messageId":"335","endLine":13,"endColumn":57},{"ruleId":"332","severity":1,"message":"333","line":13,"column":99,"nodeType":"334","messageId":"335","endLine":13,"endColumn":101},{"ruleId":"332","severity":1,"message":"333","line":13,"column":134,"nodeType":"334","messageId":"335","endLine":13,"endColumn":136},{"ruleId":"332","severity":1,"message":"333","line":19,"column":21,"nodeType":"334","messageId":"335","endLine":19,"endColumn":23},{"ruleId":"332","severity":1,"message":"333","line":24,"column":21,"nodeType":"334","messageId":"335","endLine":24,"endColumn":23},{"ruleId":"332","severity":1,"message":"333","line":24,"column":53,"nodeType":"334","messageId":"335","endLine":24,"endColumn":55},{"ruleId":"332","severity":1,"message":"333","line":24,"column":95,"nodeType":"334","messageId":"335","endLine":24,"endColumn":97},{"ruleId":"308","severity":1,"message":"341","line":22,"column":12,"nodeType":"310","messageId":"311","endLine":22,"endColumn":24},{"ruleId":"312","severity":1,"message":"342","line":65,"column":8,"nodeType":"314","endLine":65,"endColumn":10,"suggestions":"343"},{"ruleId":"344","severity":1,"message":"345","line":96,"column":96,"nodeType":"319","endLine":96,"endColumn":123},{"ruleId":"308","severity":1,"message":"341","line":17,"column":12,"nodeType":"310","messageId":"311","endLine":17,"endColumn":24},{"ruleId":"312","severity":1,"message":"346","line":68,"column":8,"nodeType":"314","endLine":68,"endColumn":20,"suggestions":"347"},{"ruleId":"312","severity":1,"message":"348","line":81,"column":8,"nodeType":"314","endLine":81,"endColumn":19,"suggestions":"349"},{"ruleId":"308","severity":1,"message":"341","line":15,"column":12,"nodeType":"310","messageId":"311","endLine":15,"endColumn":24},{"ruleId":"312","severity":1,"message":"350","line":59,"column":8,"nodeType":"314","endLine":59,"endColumn":10,"suggestions":"351"},{"ruleId":"308","severity":1,"message":"352","line":1,"column":10,"nodeType":"310","messageId":"311","endLine":1,"endColumn":22},{"ruleId":"317","severity":1,"message":"318","line":10,"column":13,"nodeType":"319","endLine":10,"endColumn":62},{"ruleId":"308","severity":1,"message":"341","line":14,"column":12,"nodeType":"310","messageId":"311","endLine":14,"endColumn":24},{"ruleId":"308","severity":1,"message":"353","line":14,"column":26,"nodeType":"310","messageId":"311","endLine":14,"endColumn":41},{"ruleId":"312","severity":1,"message":"354","line":22,"column":8,"nodeType":"314","endLine":22,"endColumn":20,"suggestions":"355"},{"ruleId":"332","severity":1,"message":"333","line":62,"column":37,"nodeType":"334","messageId":"335","endLine":62,"endColumn":39},{"ruleId":"317","severity":1,"message":"318","line":62,"column":48,"nodeType":"319","endLine":62,"endColumn":85},{"ruleId":"332","severity":1,"message":"333","line":71,"column":37,"nodeType":"334","messageId":"335","endLine":71,"endColumn":39},{"ruleId":"317","severity":1,"message":"318","line":71,"column":48,"nodeType":"319","endLine":71,"endColumn":85},{"ruleId":"332","severity":1,"message":"333","line":80,"column":37,"nodeType":"334","messageId":"335","endLine":80,"endColumn":39},{"ruleId":"317","severity":1,"message":"318","line":80,"column":48,"nodeType":"319","endLine":80,"endColumn":85},{"ruleId":"308","severity":1,"message":"341","line":9,"column":12,"nodeType":"310","messageId":"311","endLine":9,"endColumn":24},{"ruleId":"308","severity":1,"message":"353","line":9,"column":26,"nodeType":"310","messageId":"311","endLine":9,"endColumn":41},{"ruleId":"312","severity":1,"message":"356","line":17,"column":8,"nodeType":"314","endLine":17,"endColumn":20,"suggestions":"357"},{"ruleId":"317","severity":1,"message":"318","line":108,"column":53,"nodeType":"319","endLine":108,"endColumn":101},{"ruleId":"344","severity":1,"message":"345","line":109,"column":57,"nodeType":"319","endLine":109,"endColumn":84},{"ruleId":"308","severity":1,"message":"341","line":19,"column":12,"nodeType":"310","messageId":"311","endLine":19,"endColumn":24},{"ruleId":"308","severity":1,"message":"353","line":19,"column":26,"nodeType":"310","messageId":"311","endLine":19,"endColumn":41},{"ruleId":"358","severity":1,"message":"359","line":21,"column":5,"nodeType":"310","messageId":"360","endLine":21,"endColumn":17},{"ruleId":"358","severity":1,"message":"361","line":22,"column":5,"nodeType":"310","messageId":"360","endLine":22,"endColumn":17},{"ruleId":"358","severity":1,"message":"362","line":23,"column":5,"nodeType":"310","messageId":"360","endLine":23,"endColumn":17},{"ruleId":"312","severity":1,"message":"363","line":29,"column":8,"nodeType":"314","endLine":29,"endColumn":65,"suggestions":"364"},{"ruleId":"312","severity":1,"message":"365","line":37,"column":8,"nodeType":"314","endLine":37,"endColumn":26,"suggestions":"366"},{"ruleId":"317","severity":1,"message":"318","line":134,"column":31,"nodeType":"319","endLine":134,"endColumn":79},{"ruleId":"344","severity":1,"message":"345","line":135,"column":35,"nodeType":"319","endLine":135,"endColumn":62},{"ruleId":"332","severity":1,"message":"333","line":16,"column":14,"nodeType":"334","messageId":"335","endLine":16,"endColumn":16},{"ruleId":"332","severity":1,"message":"333","line":52,"column":50,"nodeType":"334","messageId":"335","endLine":52,"endColumn":52},{"ruleId":"328","severity":1,"message":"329","line":85,"column":5,"nodeType":"330","messageId":"331","endLine":96,"endColumn":6},{"ruleId":"332","severity":1,"message":"333","line":110,"column":26,"nodeType":"334","messageId":"335","endLine":110,"endColumn":28},{"ruleId":"332","severity":1,"message":"333","line":111,"column":38,"nodeType":"334","messageId":"335","endLine":111,"endColumn":40},{"ruleId":"332","severity":1,"message":"333","line":111,"column":72,"nodeType":"334","messageId":"335","endLine":111,"endColumn":74},{"ruleId":"332","severity":1,"message":"333","line":113,"column":38,"nodeType":"334","messageId":"335","endLine":113,"endColumn":40},{"ruleId":"332","severity":1,"message":"333","line":113,"column":72,"nodeType":"334","messageId":"335","endLine":113,"endColumn":74},{"ruleId":"332","severity":1,"message":"333","line":113,"column":107,"nodeType":"334","messageId":"335","endLine":113,"endColumn":109},{"ruleId":"332","severity":1,"message":"333","line":170,"column":34,"nodeType":"334","messageId":"335","endLine":170,"endColumn":36},{"ruleId":"332","severity":1,"message":"333","line":172,"column":41,"nodeType":"334","messageId":"335","endLine":172,"endColumn":43},{"ruleId":"332","severity":1,"message":"333","line":177,"column":34,"nodeType":"334","messageId":"335","endLine":177,"endColumn":36},{"ruleId":"332","severity":1,"message":"333","line":179,"column":41,"nodeType":"334","messageId":"335","endLine":179,"endColumn":43},{"ruleId":"332","severity":1,"message":"333","line":181,"column":41,"nodeType":"334","messageId":"335","endLine":181,"endColumn":43},{"ruleId":"332","severity":1,"message":"333","line":211,"column":29,"nodeType":"334","messageId":"335","endLine":211,"endColumn":31},{"ruleId":"344","severity":1,"message":"345","line":42,"column":96,"nodeType":"319","endLine":42,"endColumn":123},{"ruleId":"308","severity":1,"message":"367","line":5,"column":18,"nodeType":"310","messageId":"311","endLine":5,"endColumn":29},{"ruleId":"317","severity":1,"message":"318","line":53,"column":33,"nodeType":"319","endLine":58,"endColumn":34},{"ruleId":"317","severity":1,"message":"318","line":64,"column":33,"nodeType":"319","endLine":70,"endColumn":34},{"ruleId":"317","severity":1,"message":"318","line":97,"column":29,"nodeType":"319","endLine":103,"endColumn":30},{"ruleId":"332","severity":1,"message":"333","line":19,"column":40,"nodeType":"334","messageId":"335","endLine":19,"endColumn":42},{"ruleId":"344","severity":1,"message":"345","line":20,"column":15,"nodeType":"319","endLine":20,"endColumn":46},{"ruleId":"344","severity":1,"message":"345","line":8,"column":54,"nodeType":"319","endLine":8,"endColumn":73},{"ruleId":"344","severity":1,"message":"345","line":9,"column":13,"nodeType":"319","endLine":9,"endColumn":100},{"ruleId":"368","severity":1,"message":"369","line":5,"column":5,"nodeType":"370","messageId":"371","endLine":8,"endColumn":6},{"ruleId":"344","severity":1,"message":"345","line":13,"column":17,"nodeType":"319","endLine":13,"endColumn":73},"no-native-reassign",["372"],"no-negated-in-lhs",["373"],"no-unused-vars","'HomePage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetPlayers'. Either include it or remove the dependency array.","ArrayExpression",["374"],["375"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","Assignments to the 'errorMessage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setEmailError' needs the current value of 'email'.",["376"],"React Hook useEffect has missing dependencies: 'PasswordErrorMessage', 'password', and 'schema'. Either include them or remove the dependency array.",["377"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'confirmPassword' and 'password'. Either include them or remove the dependency array.",["378"],"React Hook useEffect has missing dependencies: 'authenticationCode.length' and 'confirmSignUp'. Either include them or remove the dependency array.",["379"],"'RiLock2Fill' is defined but never used.","'errorMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetProgress'. Either include it or remove the dependency array.",["380"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'startTime'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTimeTaken' needs the current value of 'startTime'.",["381"],"React Hook useEffect has missing dependencies: 'CreateAttempt', 'currentPlayer.player.NickName', 'difficulty', 'levelCompleted', 'levels', 'props.GameName', 'props.SkillName', and 'user'. Either include them or remove the dependency array. You can also do a functional update 'setDifficulty(d => ...)' if you only need 'difficulty' in the 'setDifficulty' call.",["382"],"React Hook useEffect has a missing dependency: 'GetLevelprogress'. Either include it or remove the dependency array.",["383"],"'shuffleArray' is defined but never used.","'setErrorMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setChar'. Either include it or remove the dependency array.",["384"],"React Hook useEffect has missing dependencies: 'ShuffleCards' and 'props.shuffledImages.incorrect'. Either include them or remove the dependency array.",["385"],"no-func-assign","'onDropPanel1' is a function.","isAFunction","'onDropPanel2' is a function.","'onDropPanel3' is a function.","React Hook useEffect has missing dependencies: 'difficulty' and 'winCondition'. Either include them or remove the dependency array.",["386"],"React Hook useEffect has missing dependencies: 'clearDroppedCards', 'props', and 'randomizeImages'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["387"],"'TiArrowBack' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},"Update the dependencies array to be: [GetPlayers]",{"range":"416","text":"417"},"Update the dependencies array to be: [GetPlayers, newPlayerCreated]",{"range":"418","text":"419"},"Update the dependencies array to be: [email, emailFocused]",{"range":"420","text":"421"},"Update the dependencies array to be: [PasswordErrorMessage, password, passwordFocused, schema]",{"range":"422","text":"423"},"Update the dependencies array to be: [confirmPassword, confirmPasswordFocused, password]",{"range":"424","text":"425"},"Update the dependencies array to be: [authenticationCode.length, autoCompleteSignUp, confirmSignUp]",{"range":"426","text":"427"},"Update the dependencies array to be: [GetProgress]",{"range":"428","text":"429"},"Update the dependencies array to be: [finishTime, startTime]",{"range":"430","text":"431"},"Update the dependencies array to be: [CreateAttempt, currentPlayer.player.NickName, difficulty, levelCompleted, levels, props.GameName, props.SkillName, timeTaken, user]",{"range":"432","text":"433"},"Update the dependencies array to be: [GetLevelprogress]",{"range":"434","text":"435"},"Update the dependencies array to be: [difficulty, setChar]",{"range":"436","text":"437"},"Update the dependencies array to be: [ShuffleCards, difficulty, props.shuffledImages.incorrect]",{"range":"438","text":"439"},"Update the dependencies array to be: [difficulty, droppedItemPanel1, droppedItemPanel2, droppedItemPanel3, winCondition]",{"range":"440","text":"441"},"Update the dependencies array to be: [clearDroppedCards, props, props.popupState, randomizeImages]",{"range":"442","text":"443"},[3041,3043],"[GetPlayers]",[3257,3275],"[GetPlayers, newPlayerCreated]",[2376,2390],"[email, emailFocused]",[2988,3005],"[PasswordErrorMessage, password, passwordFocused, schema]",[3952,3976],"[confirmPassword, confirmPasswordFocused, password]",[4896,4916],"[authenticationCode.length, autoCompleteSignUp, confirmSignUp]",[2551,2553],"[GetProgress]",[2828,2840],"[finishTime, startTime]",[3571,3582],"[CreateAttempt, currentPlayer.player.NickName, difficulty, levelCompleted, levels, props.GameName, props.SkillName, timeTaken, user]",[2299,2301],"[GetLevelprogress]",[796,808],"[difficulty, setChar]",[548,560],"[ShuffleCards, difficulty, props.shuffledImages.incorrect]",[1234,1291],"[difficulty, droppedItemPanel1, droppedItemPanel2, droppedItemPanel3, winCondition]",[1481,1499],"[clearDroppedCards, props, props.popupState, randomizeImages]"]