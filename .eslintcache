[{"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\index.js":"1","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\App.js":"2","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\reportWebVitals.js":"3","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\LevelNavigationPage.js":"4","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\routes\\Routes.js":"5","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Level-List.js":"6","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\routes\\Level-Routes.js":"7","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\LevelNavigationIndex.js":"8","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\DragItemTypes.js":"9","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\images\\MixAndMatchImages.js":"10","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\games\\Game1.js":"11","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\games\\MixAndMatch.js":"12","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\mixandmatch\\Target.js":"13","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\mixandmatch\\Source.js":"14","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\images\\Image-Functions.js":"15","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Back-Button.js":"16","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\games\\Throw-Eyes.js":"17","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\images\\ThrowEyesImages.js":"18","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\throweyes\\Character.js":"19","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\throweyes\\Target.js":"20","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Game-Popup.js":"21","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\ScrollDrag.js":"22","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\aws-exports.js":"23","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\account\\LogInPage.js":"24","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\libs\\contextLib.js":"25","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\Home-Page.js":"26","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\libs\\Reducer.js":"27","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\libs\\index.js":"28","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\libs\\Actions.js":"29","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\routes\\AuthenticatedRoute.js":"30","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Settings.js":"31","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\account\\SignUpPage.js":"32","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\account\\SignupPage.js":"33","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Profile-Image-Menu.js":"34","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Player-Signout.js":"35","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Birthday-Format.js":"36","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\images\\ProfilePictureImages.js":"37","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\images\\Monster-Images.js":"38","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\SkillNavigationPage.js":"39","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\LevelNavComponent.js":"40","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\LevelNavbar.js":"41"},{"size":895,"mtime":1615516424705,"results":"42","hashOfConfig":"43"},{"size":173,"mtime":1615516424697,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"43"},{"size":224,"mtime":1612693562226,"results":"46","hashOfConfig":"43"},{"size":908,"mtime":1615719022016,"results":"47","hashOfConfig":"43"},{"size":8119,"mtime":1615719022011,"results":"48","hashOfConfig":"43"},{"size":7094,"mtime":1615719022016,"results":"49","hashOfConfig":"43"},{"size":3822,"mtime":1615719022018,"results":"50","hashOfConfig":"43"},{"size":77,"mtime":1613481528538,"results":"51","hashOfConfig":"43"},{"size":2983,"mtime":1615719022014,"results":"52","hashOfConfig":"43"},{"size":306,"mtime":1614489643178,"results":"53","hashOfConfig":"43"},{"size":5533,"mtime":1615719022020,"results":"54","hashOfConfig":"43"},{"size":1281,"mtime":1614489643165,"results":"55","hashOfConfig":"43"},{"size":781,"mtime":1613481528541,"results":"56","hashOfConfig":"43"},{"size":3495,"mtime":1615719022013,"results":"57","hashOfConfig":"43"},{"size":432,"mtime":1614489643158,"results":"58","hashOfConfig":"43"},{"size":5489,"mtime":1615719022021,"results":"59","hashOfConfig":"43"},{"size":607,"mtime":1614489643164,"results":"60","hashOfConfig":"43"},{"size":378,"mtime":1614489643168,"results":"61","hashOfConfig":"43"},{"size":265,"mtime":1614489643169,"results":"62","hashOfConfig":"43"},{"size":4999,"mtime":1615719022009,"results":"63","hashOfConfig":"43"},{"size":2058,"mtime":1613648637145,"results":"64","hashOfConfig":"65"},{"size":949,"mtime":1614752997634,"results":"66","hashOfConfig":"43"},{"size":4179,"mtime":1615735046589,"results":"67","hashOfConfig":"43"},{"size":2778,"mtime":1615516424707,"results":"68","hashOfConfig":"43"},{"size":6652,"mtime":1615719022017,"results":"69","hashOfConfig":"43"},{"size":996,"mtime":1615086078690,"results":"70","hashOfConfig":"43"},{"size":550,"mtime":1615516424707,"results":"71","hashOfConfig":"43"},{"size":1896,"mtime":1615086078689,"results":"72","hashOfConfig":"43"},{"size":1346,"mtime":1615548776578,"results":"73","hashOfConfig":"43"},{"size":4159,"mtime":1615516424702,"results":"74","hashOfConfig":"43"},{"size":12160,"mtime":1615736657188,"results":"75","hashOfConfig":"43"},{"size":8936,"mtime":1615086078697,"results":"76","hashOfConfig":"43"},{"size":1021,"mtime":1615719022012,"results":"77","hashOfConfig":"43"},{"size":379,"mtime":1615516424699,"results":"78","hashOfConfig":"43"},{"size":808,"mtime":1615516424699,"results":"79","hashOfConfig":"43"},{"size":366,"mtime":1615516424703,"results":"80","hashOfConfig":"43"},{"size":338,"mtime":1615719022014,"results":"81","hashOfConfig":"43"},{"size":1343,"mtime":1615719022019,"results":"82","hashOfConfig":"43"},{"size":2837,"mtime":1615719022011,"results":"83","hashOfConfig":"43"},{"size":1301,"mtime":1615719022012,"results":"84","hashOfConfig":"43"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"9i7rmp",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"87"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"87"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"87"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"87"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"87"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"87"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"87"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"87"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},"1qz10a5",{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"87"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"87"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"87"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"87"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"87"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"87"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"87"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"87"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\index.js",[],["192","193"],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\App.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\reportWebVitals.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\LevelNavigationPage.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\routes\\Routes.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Level-List.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\routes\\Level-Routes.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\LevelNavigationIndex.js",["194","195","196"],"import React, { useState, useEffect } from 'react'\r\nimport { Levels } from '../components/Level-List'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuthPlayer, useAuthUser } from '../libs'\r\nimport Axios from 'axios'\r\nimport SimpleBar from 'simplebar-react';\r\nimport { RiUserFill } from 'react-icons/ri'\r\nimport { TiTick } from 'react-icons/ti'\r\nimport { BsArrowRightShort } from 'react-icons/bs'\r\nimport LevelNavbar from '../components/LevelNavbar'\r\nimport 'simplebar/dist/simplebar.min.css';\r\n\r\nexport default function LevelNavigationPage(props) {\r\n    \r\n    const currentPlayer = useAuthPlayer()\r\n    const user = useAuthUser()\r\n\r\n    const [progress, setProgress] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    function getSkillProgress(SkillName) {\r\n        let total = 0\r\n        for (let i = 0; i < progress.length; i++) {\r\n            if (progress[i].SkillName === SkillName) {\r\n                total += progress[i].LevelsCompleted\r\n            }\r\n        }\r\n        return total\r\n    }\r\n\r\n    const GetProgress = () => {\r\n        Axios.post('http://localhost:3001/api/gettotalprogress', {\r\n            UserName: user.attributes.sub,\r\n            NickName: currentPlayer.player.NickName\r\n        }).then((response) => {\r\n            setProgress(response.data);\r\n        }).catch((error) => {\r\n            setErrorMessage(error)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetProgress()\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"Level-Nav-Background\">\r\n            <div className=\"container\">\r\n                <div className=\"d-flex mb-3\">\r\n                    <div className=\"mr-auto\">\r\n                        <h1 id=\"Level-Navigation-Title\">JumpStart</h1>\r\n                    </div>\r\n                    <div id=\"Current-Player\" className=\"align-self-center\">\r\n                        <RiUserFill />{currentPlayer.player.NickName}\r\n                    </div>\r\n                </div>\r\n\r\n                <LevelNavbar />\r\n                \r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <SimpleBar style={{ height: '70vh' }} autoHide={false}>\r\n                    <div id=\"Level-Nav\">\r\n                        {Levels.map((level,i) => {\r\n                            return (    \r\n                                <Link to={level.to} key={i}>\r\n                                    <div className={`d-inline-flex justify-content-center align-items-center mr-4 mb-5 Game-Container ${getSkillProgress(level.name) >= level.numLevels ? 'green' : 'orange' }`}>\r\n                                        <div className=\"nav-item\" id={\"Game-\"+level.id}>\r\n                                            <div className=\"d-flex justify-content-end\">\r\n                                                <div className=\"d-inline-flex nav-item-svg\">\r\n                                                    {getSkillProgress(level.name) >= level.numLevels ? <TiTick size={40} /> : <BsArrowRightShort size={40} /> }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-center\"><img src={level.monster} /></div>\r\n                                            <div className=\"d-flex justify-content-center level-name\">{level.name}</div>\r\n                                            <div className=\"d-flex justify-content-center level-progress\">{`${getSkillProgress(level.name)} of ${level.numLevels} completed`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </SimpleBar>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\DragItemTypes.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\images\\MixAndMatchImages.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\games\\Game1.js",["197"],"import React from 'react';\r\nimport './Game1.scss';\r\n  \r\nexport default class Game1 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.props.backButton}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\games\\MixAndMatch.js",["198","199","200","201","202"],"import React, { useState, useEffect } from \"react\"\r\nimport Source from \"../../components/mixandmatch/Source\"\r\nimport Target from \"../../components/mixandmatch/Target\"\r\nimport { shuffleArray } from '../../components/images/Image-Functions'\r\nimport './MixAndMatch.scss'\r\nimport { ItemTypes } from '../../components/DragItemTypes'\r\nimport GamePopup from '../../components/Game-Popup'\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\n\r\n//Known issue with Mix and Match, problem with drag and drop component when you drag the correct right card and then the correct left card if using {difficulty === 1 && } logic, find fix later\r\nexport default function MixAndMatch(props) {\r\n\r\n    const [popupState, setPopupState] = useState(true)\r\n    const [difficulty, setDifficulty] = useState(1);\r\n    const [droppedItemLeft, setDroppedItemLeft] = useState({})\r\n    const [droppedItemRight, setDroppedItemRight] = useState({})\r\n    const [attemptNumber, setAttemptNumber] = useState(0)\r\n\r\n    const gameTitle = 'Mix & Match';\r\n    const levels = 1;\r\n\r\n    onDropLeft = onDropLeft.bind(this)\r\n    onDropRight = onDropRight.bind(this)\r\n\r\n    useEffect(() => {\r\n      winCondition()\r\n    }, [droppedItemLeft, droppedItemRight])\r\n\r\n    useEffect(() => {\r\n      if(popupState === false) {\r\n        clearDroppedCards()\r\n        randomizeImages()\r\n      }\r\n    }, [popupState])\r\n  \r\n    function onDropLeft(item) {\r\n      setDroppedItemLeft(item)\r\n    }\r\n  \r\n    function onDropRight(item) {\r\n      setDroppedItemRight(item)\r\n    }\r\n\r\n    function randomizeImages() {\r\n      props.shuffledImages.left = shuffleArray(props.shuffledImages.left)\r\n      props.shuffledImages.right = shuffleArray(props.shuffledImages.right)\r\n    }\r\n\r\n    function clearDroppedCards() {\r\n      setDroppedItemLeft({})\r\n      setDroppedItemRight({})\r\n    }\r\n\r\n    function winCondition() {\r\n      if( ((Object.keys(droppedItemLeft).length !== 0 && droppedItemLeft.constructor === Object) && (Object.keys(droppedItemRight).length !== 0 && droppedItemRight.constructor === Object))) {\r\n        if(droppedItemLeft.correct === 'true' && droppedItemRight.correct === 'true') {\r\n          setDifficulty(difficulty + 1)\r\n          setAttemptNumber(0)\r\n          setPopupState(true)\r\n        } \r\n        else if( (droppedItemLeft.correct === 'false' || droppedItemRight.correct === 'false') ) {\r\n          setAttemptNumber(attemptNumber + 1)\r\n          setPopupState(true)\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"game-background\">\r\n        {props.backButton}\r\n        <GamePopup open={popupState} setOpen={setPopupState} gameTitle={gameTitle} levelsCleared={difficulty} numLevels={levels} levelPassed={attemptNumber < 1} />\r\n        <div className=\"container\">\r\n          \r\n          {/* Uncomment when Card component is completed (First level of mix and match is select the correct image, no mixing or matching)\r\n            {difficulty <= 1 &&\r\n            <>\r\n            </>\r\n            }\r\n          */}\r\n        {props.vertical ? \r\n        <>\r\n           <div className=\"row align-items-center\">\r\n              <div className=\"col-lg align-self-center\">\r\n\r\n                <div className= \"row justify-content-center vertical-match\">\r\n                  <Target position={ItemTypes.CARDLEFT} droppedItem={droppedItemLeft} onDrop={onDropLeft} />\r\n                </div>\r\n                <div className= \"row justify-content-center vertical-match\">\r\n                  <Target position={ItemTypes.CARDRIGHT} droppedItem={droppedItemRight} onDrop={onDropRight} />\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n              \r\n              <div className=\"row vertical-match\">\r\n                {props.shuffledImages.left.map((image) => (\r\n                  <Source image={image.default} correct={image.correct} position={image.position} />\r\n                ))}\r\n              </div>\r\n              <div className=\"row vertical-match\">\r\n                {props.shuffledImages.right.map((image) => (\r\n                  <Source image={image.default} correct={image.correct} position={image.position} />\r\n                ))}\r\n              </div>\r\n\r\n            </div>\r\n            </>\r\n            :\r\n            <>\r\n            <div className=\"row align-items-center\">\r\n\r\n              <div className=\"col-lg-4 align-self-center horizontal-match\">\r\n                {props.shuffledImages.left.map((image) => (\r\n                <div className=\"row justify-content-center\">\r\n                  <Source image={image.default} correct={image.correct} position={image.position} />\r\n                </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className= \"row justify-content-center horizontal-match\">\r\n                <Target position={ItemTypes.CARDLEFT} droppedItem={droppedItemLeft} onDrop={onDropLeft} />\r\n                <Target position={ItemTypes.CARDRIGHT} droppedItem={droppedItemRight} onDrop={onDropRight} />\r\n              </div>\r\n\r\n              <div className=\"col-lg-4 align-self-center horizontal-match\">\r\n                {props.shuffledImages.right.map((image) => (\r\n                  <div className=\"row justify-content-center\">\r\n                    <Source image={image.default} correct={image.correct} position={image.position} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n            </div>\r\n            </>\r\n        }\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\mixandmatch\\Target.js",["203","204"],"import React, { Component } from \"react\";\r\nimport { DropTarget } from \"react-dnd\";\r\nimport \"./Target.scss\";\r\n\r\nclass Target extends Component {\r\n\r\n  render() {\r\n      const { isOver, canDrop, connectDropTarget, droppedItem } = this.props;\r\n      let className = \"\";\r\n      if (isOver && canDrop) {\r\n          className = \"green\";\r\n      } else if (!isOver && canDrop) {\r\n          className = \"yellow\";\r\n      } else if (isOver && !canDrop) {\r\n          className = \"red\";\r\n      }\r\n\r\n      return connectDropTarget(\r\n          <div id={this.props.position == 'Left' ? 'Left-Target' : 'Right-Target'} className={`target ${className}`} correct={droppedItem.correct}>\r\n              <img src={droppedItem.image} />\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst spec = {\r\n  drop(props, monitor, component) {\r\n    const item = monitor.getItem();\r\n    props.onDrop(item);\r\n  }\r\n};\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver(),\r\n    isOverCurrent: monitor.isOver({ shallow: true }),\r\n    canDrop: monitor.canDrop()\r\n  };\r\n}\r\n\r\nconst position = {\r\n  getPosition(props) {\r\n    const item = props.position;\r\n    return item;\r\n  }\r\n};\r\n\r\nexport default DropTarget(position.getPosition, spec, collect)(Target);\r\n","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\mixandmatch\\Source.js",["205"],"import React, { Component } from \"react\";\r\nimport { DragSource } from \"react-dnd\";\r\nimport \"./Source.scss\";\r\n\r\nclass Source extends Component {\r\n  render() {\r\n    const { image, connectDragSource } = this.props;\r\n    return connectDragSource(<div className=\"square\"><img src={image} /></div>);\r\n  }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource()\r\n  };\r\n}\r\n\r\nconst cardSource = {\r\n  beginDrag(props, monitor, component) {\r\n    const item = {  image: props.image,\r\n                    correct: props.correct    };\r\n    return item;\r\n  }\r\n};\r\n\r\nconst position = {\r\n  getPosition(props) {\r\n    const item = props.position;\r\n    return item;\r\n  }\r\n};\r\n\r\nexport default DragSource(position.getPosition, cardSource, collect)(Source);\r\n","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\images\\Image-Functions.js",["206","207","208","209","210","211","212","213","214","215","216","217"],"\r\nfunction assignMaMValues(keys, array) {\r\n    console.log(keys)\r\n    for (let i = 0; i < array.length; i++) {\r\n        array[i] = splitMaMString(keys[i], array[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction splitMaMString(string, object) {\r\n    string = string.split(\".\");\r\n    string = string[0].split(\"_\");\r\n\r\n    if(string[3] == 'panel1') {\r\n        object.position = 'Left';\r\n    } else if(string[3] == 'panel2') {\r\n        object.position = 'Right';\r\n    } else if(string[3] == 'panel3') {\r\n        object.position = 'Right';\r\n    }\r\n    if(string[4].substr(0, string[4].length - 1) == 'Correct') {\r\n        object.correct = 'true';\r\n    } else {\r\n        object.correct = 'false';\r\n    }\r\n\r\n    return object;\r\n}\r\n\r\nfunction assignThrowEyesValues(array) {\r\n    for (let i = 0; i < array.length; i++) {\r\n        splitThrowEyesString(array[i].default, array[i]);\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction splitThrowEyesString(string, object) {\r\n    string = string.split(\"/\");\r\n    string = string[3].split(\".\");\r\n    string = string[0].split(\"_\");\r\n\r\n    if(string.length < 4) {\r\n        object.type = 'Target';\r\n    } else {\r\n        object.type = 'Character';\r\n        object.eyePosition = string[3];\r\n        object.id = eyePosition(string[3]);\r\n    }\r\n\r\n    return object;\r\n}\r\n\r\nfunction eyePosition(position) {\r\n    switch(position) {\r\n        case 'FarLeft':\r\n            return 1;\r\n        case 'Left':\r\n            return 2;\r\n        case 'Center':\r\n            return 3;\r\n        case 'Right':\r\n            return 4;\r\n        case 'FarRight':\r\n            return 5;\r\n    }\r\n}\r\n\r\nfunction sortThrowEyesImages(array) {\r\n    let sortedArray = [];\r\n    let easyArray = [];\r\n    let mediumArray = [];\r\n    let hardArray = [];\r\n\r\n    let easy = 0;\r\n    let medium = 0;\r\n    let hard = 0;\r\n\r\n    for(let i = 0; i < array.length; i++) {\r\n        if(array[i].type == 'Character') {\r\n            if (array[i].eyePosition == 'Left' || array[i].eyePosition == 'Right') \r\n                easyArray[easy++] = array[i];\r\n            if (array[i].eyePosition == 'Left' || array[i].eyePosition == 'Right' || array[i].eyePosition == 'Center') \r\n                mediumArray[medium++] = array[i];\r\n            hardArray[hard++] = array[i];\r\n        } else {\r\n            sortedArray.target = array[i];\r\n        }\r\n    }\r\n\r\n    sortedArray.easy = easyArray;\r\n    sortedArray.medium = mediumArray;\r\n    sortedArray.hard = hardArray;\r\n\r\n    return sortedArray;\r\n}\r\n\r\n\r\nfunction shuffleArray(array) {\r\n    let i = array.length - 1;\r\n    for (; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction returnRandomThrowEyesChar(array) {\r\n    shuffleArray(array);\r\n    return array[0];\r\n}\r\n\r\nfunction sortMaMImages(array) {\r\n    let sortedArray = [];\r\n    let leftArray = [];\r\n    let rightArray = [];\r\n    \r\n    let left = 0;\r\n    let right = 0;\r\n\r\n    for(let i = 0; i < array.length; i++) {\r\n        if(array[i].position == 'Left') {\r\n            leftArray[left] = array[i];\r\n            left++;\r\n        } else {\r\n            rightArray[right] = array[i];\r\n            right++;\r\n        }\r\n    }\r\n\r\n    sortedArray.left = leftArray;\r\n    sortedArray.right = rightArray;\r\n\r\n    return sortedArray;\r\n}\r\n\r\nexport {\r\n    assignMaMValues,\r\n    shuffleArray,\r\n    sortMaMImages,\r\n    assignThrowEyesValues,\r\n    sortThrowEyesImages,\r\n    returnRandomThrowEyesChar\r\n}\r\n","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Back-Button.js",["218"],"import React from 'react'\r\nimport './Back-Button.scss'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FiArrowLeftCircle } from 'react-icons/fi'\r\n\r\nexport default function BackButton() {\r\n    let navigate = useNavigate();\r\n    return (\r\n        <div>\r\n            <a id=\"Back-Button\" onClick={() => navigate(-1)}>\r\n                <FiArrowLeftCircle id=\"Back\" size={130} />\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\games\\Throw-Eyes.js",["219","220","221","222","223","224","225","226","227"],"import React, { useState, useEffect } from 'react'\r\nimport Character from '../../components/throweyes/Character'\r\nimport Target from '../../components/throweyes/Target'\r\nimport { returnRandomThrowEyesChar } from '../../components/images/Image-Functions'\r\nimport GamePopup from '../../components/Game-Popup'\r\nimport { useAuthPlayer, useAuthUser } from '../../libs'\r\nimport Axios from 'axios'\r\nimport './Throw-Eyes.scss'\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\nexport default function ThrowEyes(props) {\r\n    \r\n    const [difficulty , setDifficulty] = useState(1)\r\n    const [character, setCharacter] = useState(setChar)\r\n    const [levelCompleted, setLevelCompleted] = useState('False')\r\n    const [attemptNumber, setAttemptNumber] = useState(0)\r\n    const [popupState, setPopupState] = useState(true)\r\n    const [startTime, setStartTime] = useState(null)\r\n    const [finishTime, setFinishTime] = useState(null)\r\n    const [timeTaken, setTimeTaken] = useState(null)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const currentPlayer = useAuthPlayer()\r\n    const user = useAuthUser()\r\n\r\n    const gameTitle = 'Throw Eyes';\r\n    const levels = 3;\r\n    \r\n    const easyTargets = [false,true,false,true,false];\r\n    const mediumTargets = [false,true,true,true,false];\r\n    const hardTargets = [true,true,true,true,true];\r\n\r\n    const CreateAttempt = () => {\r\n        Axios.post('http://localhost:3001/api/createattempt', {\r\n            GameName: props.GameName,\r\n            LevelNumber: difficulty,\r\n            UserName: user.attributes.sub,\r\n            NickName: currentPlayer.player.NickName,\r\n            Succesful: levelCompleted,\r\n            TimeTaken: timeTaken\r\n        }).then((response) => {\r\n            \r\n        }).catch((error) => {\r\n            setErrorMessage(error)\r\n            console.log(error)\r\n        })\r\n    }   \r\n\r\n    useEffect(() => {\r\n        if(popupState === false) // If the game popupscreen is set to false (closed) start the \"timer\"\r\n            setStartTime(new Date().getTime())\r\n    }, [popupState])\r\n\r\n    useEffect(() => { // Once the finishTime state is updated calculate the total time\r\n        setTimeTaken(Math.round( ( ( (finishTime - startTime) / 1000) + Number.EPSILON) * 100) / 100 )\r\n    }, [finishTime])\r\n    \r\n    useEffect(() => { // \r\n        if( (difficulty <= levels  && timeTaken !== null && timeTaken !== 0 ) ) { // Don't create attempt when all levels have been cleared or when timer is being initialized\r\n            CreateAttempt()\r\n            if(levelCompleted === 'True') { // If level was completed set it back to false for next level and increment the difficulty\r\n                setDifficulty(difficulty + 1)\r\n                setLevelCompleted('False')\r\n            }\r\n        }\r\n    }, [timeTaken])\r\n\r\n    function setChar() {\r\n        if(difficulty === 1) {\r\n            return returnRandomThrowEyesChar(props.shuffledImages.easy)\r\n        }\r\n        else if (difficulty === 2) {\r\n            return returnRandomThrowEyesChar(props.shuffledImages.medium)\r\n        }\r\n        else if (difficulty === 3) {\r\n            return returnRandomThrowEyesChar(props.shuffledImages.hard)\r\n        }\r\n    }\r\n\r\n    function winCondition(targetID) {\r\n        setFinishTime(new Date().getTime()) // When user clicks an option set the finish time\r\n        \r\n        if(targetID === character.id) {\r\n            setLevelCompleted('True')\r\n            setPopupState(true)\r\n            setAttemptNumber(0)\r\n            setCharacter(setChar())\r\n        }\r\n        else {\r\n            setCharacter(setChar())\r\n            setAttemptNumber(attemptNumber + 1)\r\n            setPopupState(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-background\">\r\n        {props.backButton}\r\n        <GamePopup open={popupState} setOpen={setPopupState} gameTitle={gameTitle} levelsCleared={difficulty} numLevels={levels} levelPassed={attemptNumber < 1} />\r\n        <div className=\"container-fluid\">\r\n            <Character image={character.default} />\r\n            {difficulty === 1 && \r\n                <div className=\"row justify-content-center\">\r\n                    {easyTargets.map((target, i) => ( \r\n                    <div class=\"col-lg-2\">\r\n                        {target == true ?  <a onClick={() => winCondition(i+1)}> <Target image={props.shuffledImages.target.default} targetID={character.id} /> </a> : <span></span> }\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n            }\r\n            {difficulty === 2 &&\r\n                <div className=\"row justify-content-center\">\r\n                    {mediumTargets.map((target, i) => ( \r\n                    <div class=\"col-lg-2\">\r\n                        {target == true ?  <a onClick={() => winCondition(i+1)}> <Target image={props.shuffledImages.target.default} targetID={character.id} /> </a> : <span></span> }\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n            }\r\n            {difficulty === 3 &&\r\n                <div className=\"row justify-content-center\">\r\n                    {hardTargets.map((target, i) => ( \r\n                    <div class=\"col-lg-2\">\r\n                        {target == true ?  <a onClick={() => winCondition(i+1)}> <Target image={props.shuffledImages.target.default} targetID={character.id} /> </a> : <span></span> }\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\images\\ThrowEyesImages.js",["228"],"import { shuffleArray, assignThrowEyesValues, sortThrowEyesImages } from './Image-Functions';\r\n\r\nconst importAll = require =>\r\n  require.keys().reduce((acc, next) => {\r\n    acc[next.replace(\"./\", \"\")] = require(next);\r\n    return acc;\r\n  }, {});\r\n\r\nconst imageModules = importAll(\r\n  require.context('../../assets/games/hotspot/Throw_Eyes/', false, /\\.(png|jpe?g|svg)$/)\r\n);\r\n\r\nlet images = Object.values(imageModules);\r\nimages = assignThrowEyesValues(images);\r\nlet HotSpotThrowEyes = sortThrowEyesImages(images);\r\n//HotSpotThrowEyes = shuffleArray(HotSpotThrowEyes);\r\n\r\nexport {\r\n    HotSpotThrowEyes,\r\n}\r\n","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\throweyes\\Character.js",["229","230"],"import React from 'react'\r\nimport './Character.scss'\r\n\r\nexport default class Character extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"row justify-content-md-center\">\r\n                <img src={this.props.image} id=\"Throw-Eyes-Character\" />\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\throweyes\\Target.js",["231"],"import React from 'react'\r\nimport './Target.scss'\r\n\r\n\r\nexport default class Target extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <img src={this.props.image} class=\"Throw-Eyes-Target\" targetID={this.props.targetID} />\r\n        )\r\n    }\r\n}","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Game-Popup.js",["232","233","234","235"],"import React from 'react'\r\nimport Popup from 'reactjs-popup'\r\nimport './Game-Popup.scss'\r\nimport { BsStarFill, BsStar } from 'react-icons/bs'\r\nimport { TiHome, TiArrowBack } from 'react-icons/ti'\r\nimport { FaPlay } from 'react-icons/fa'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction returnStars(props) {\r\n    let stars = [];\r\n    for(let i = 0; i < props.numLevels; i++) {\r\n        if(i + 1 < props.levelsCleared) {\r\n            stars[i] = <BsStarFill />\r\n        }\r\n        else if(i + 1 === props.levelsCleared) {\r\n            stars[i] = <BsStarFill activestar=\" activestar\" />\r\n        }\r\n        else {\r\n            stars[i] = <BsStar />\r\n        }\r\n    }\r\n    return stars;\r\n}\r\n\r\nexport default function GamePopup(props) {\r\n    \r\n    let navigate = useNavigate();\r\n\r\n    return(\r\n        <Popup open={props.open} closeOnDocumentClick={false} closeOnEscape={false} lockScroll={true} modal>\r\n            {close => (\r\n                <>\r\n                {props.levelPassed ?\r\n                    <div className=\"game-popup container\">\r\n                        <div className=\"header col-lg-12\">\r\n                            <h1 className=\"row justify-content-md-center\">{props.gameTitle}</h1>\r\n                        </div>\r\n                        <div className=\"content col-lg-12\">\r\n                            <div className=\"row justify-content-md-center\">\r\n                                {returnStars(props).map((star,i) =>\r\n                                    <div key={i} className={star.props.activestar}>\r\n                                        {star}\r\n                                    </div>\r\n                                )\r\n                                }\r\n                            </div>\r\n                            {props.levelsCleared > props.numLevels ? <h2 id=\"Level-Text\" className=\"row justify-content-md-center\">You did it!</h2> : <h2 id=\"Level-Text\" className=\"row justify-content-md-center\">Level {props.levelsCleared}</h2> }\r\n                        </div>\r\n\r\n                        {props.levelsCleared > props.numLevels ?\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <a\r\n                                    id=\"Popup-Home-Button\"\r\n                                    onClick={() => {\r\n                                        navigate(-1)\r\n                                    }}\r\n                                >\r\n                                    <span>Home</span><span id=\"Play-Icon\"><TiHome /></span>\r\n                                </a>\r\n                            </div>\r\n                            :\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <a\r\n                                    id=\"Popup-Play-Button\"\r\n                                    onClick={() => {\r\n                                        close()\r\n                                        props.setOpen(false)\r\n                                    }}\r\n                                >\r\n                                    <span>Play</span><span id=\"Play-Icon\"><FaPlay /></span>\r\n                                </a>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    :\r\n\r\n                    <div className=\"game-popup container\">\r\n                        <div className=\"header col-lg-12\">\r\n                            <h1 className=\"row justify-content-md-center\">{props.gameTitle}</h1>\r\n                        </div>\r\n                        <div className=\"content col-lg-12\">\r\n                            <div className=\"row justify-content-md-center\">\r\n                                {returnStars(props).map((star, i) =>\r\n                                    <div key={i} className={star.props.activestar}>\r\n                                        {star}\r\n                                    </div>\r\n                                )\r\n                                }\r\n                            </div>\r\n                            {props.levelsCleared > props.numLevels ? <h2 id=\"Level-Text\" className=\"row justify-content-md-center\">Try Again!</h2> : <h2 id=\"Level-Text\" className=\"row justify-content-md-center\">Level {props.levelsCleared}</h2> }\r\n                        </div>\r\n                        \r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <a\r\n                                id=\"Popup-Play-Button\"\r\n                                onClick={() => {\r\n                                    close()\r\n                                    props.setOpen(false)\r\n                                }}\r\n                            >\r\n                                <span>Retry</span><span id=\"Play-Icon\"><FaPlay /></span>\r\n                            </a>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n                </>\r\n            )}\r\n        </Popup>\r\n    );\r\n}\r\n","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\ScrollDrag.js",["236"],"import React, { useEffect, useRef, useState } from \"react\"\r\n\r\n/**\r\n  * Make an element scrollable by dragging\r\n  * @param buttons - Buttons user can drag with. See https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\r\n  * @returns {React.MutableRefObject} -  The ref to be applied to to the element to make it draggable\r\n  */\r\nexport default function useDraggable(buttons = [1, 4, 5]) {\r\n  // Ref to be attached to the element we want to drag\r\n  const ref = useRef()\r\n  // Position of the mouse on the page on mousedown\r\n  const [startX, setStartX] = useState(0)\r\n  const [startY, setStartY] = useState(0)\r\n  // Amount the draggable element is already scrolled\r\n  const [startScrollLeft, setStartScrollLeft] = useState(0)\r\n  const [startScrollTop, setStartScrollTop] = useState(0)\r\n\r\n  useEffect(() => {\r\n    function handleDown(e) {\r\n      // Only allow dragging inside of target element\r\n      if (!ref.current.contains(e.target)) {\r\n        return\r\n      }\r\n      // Set initial positions of mouse element scroll\r\n      setStartX(e.pageX - ref.current.offsetLeft)\r\n      setStartY(e.pageY - ref.current.offsetTop)\r\n      setStartScrollLeft(ref.current.scrollLeft)\r\n      setStartScrollTop(ref.current.scrollTop)\r\n    }\r\n    function handleMove(e) {\r\n      e.preventDefault()\r\n      // Position of mouse on the page\r\n      const mouseX = e.pageX - ref.current.offsetLeft\r\n      const mouseY = e.pageY - ref.current.offsetTop\r\n      // Distance of the mouse from the origin of the last mousedown event\r\n      const walkX = mouseX - startX\r\n      const walkY = mouseY - startY\r\n      // Set element scroll\r\n      ref.current.scrollLeft = startScrollLeft - walkX\r\n      ref.current.scrollTop = startScrollTop - walkY\r\n    }\r\n    // Add and clean up listeners\r\n    document.addEventListener(\"mousedown\", handleDown)\r\n    document.addEventListener(\"mousemove\", handleMove)\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleDown)\r\n      document.removeEventListener(\"mousemove\", handleMove)\r\n    }\r\n  })\r\n\r\n  return ref\r\n}",["237","238"],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\aws-exports.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\account\\LogInPage.js",["239","240","241"],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\libs\\contextLib.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\Home-Page.js",["242","243","244","245"],"import './Home-Page.scss'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { TiUserAdd } from 'react-icons/ti';\r\nimport Settings from '../components/Settings'\r\nimport PlayerSignout from '../components/Player-Signout'\r\nimport { useAuthPlayer, useAuthUser } from '../libs'\r\nimport Axios from 'axios'\r\nimport { ProfilePictureImages } from '../components/images/ProfilePictureImages'\r\nimport DatePicker from 'react-date-picker';\r\nimport ProfileImageMenu from '../components/Profile-Image-Menu'\r\nimport FormatBirthday from '../components/Birthday-Format'\r\n\r\nexport default function HomePage() {\r\n\r\n    const currentPlayer = useAuthPlayer()\r\n    const user = useAuthUser()\r\n    const [playerList, setPlayerList] = useState([])\r\n    const [createNewPlayer, setCreateNewPlayer] = useState(false)\r\n    const [nickname, setNickname] = useState('')\r\n    const [birthday, setBirthday] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [profileImage, setProfileImage] = useState(0)\r\n    //const [activeProfileImage, setActiveProfileImage] = useState(0)\r\n\r\n    const GetPlayers = () => {\r\n        Axios.post('http://localhost:3001/api/getplayers', {\r\n            UserName: user.attributes.sub\r\n        }).then((response) => {\r\n            setPlayerList(response.data);\r\n        }).catch((error) => {\r\n            setErrorMessage(error)\r\n        })\r\n    }\r\n\r\n    const createPlayer = () => {\r\n        Axios.post('http://localhost:3001/api/createplayer', {\r\n            UserName: user.attributes.sub,\r\n            nickname: nickname,\r\n            birthday: FormatBirthday(birthday.toString()),\r\n            profileImage: profileImage\r\n        }).then(() => {\r\n            hideCreatePlayer()\r\n        }).catch((error) => {\r\n            setErrorMessage(error)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetPlayers()\r\n    }, [])\r\n\r\n    function showCreatePlayer() {\r\n        setCreateNewPlayer(true)\r\n    }\r\n\r\n    function hideCreatePlayer() {\r\n        setCreateNewPlayer(false)\r\n    }\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <Settings />\r\n            {currentPlayer.player === false ?\r\n            <>\r\n                {createNewPlayer === false ? \r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-md-center\">\r\n                        <div class=\"card-deck\">\r\n                            {playerList.map(player => {\r\n                                return (\r\n                                    <div key={player.NickName} className=\"Player-Container card\">\r\n                                        <a onClick={() => currentPlayer.setPlayer(player)}>\r\n                                            <img class=\"card-img-top\" src={ProfilePictureImages[player.ProfilePicture].default} alt=\"Player Profile Picture\" />\r\n                                            <div class=\"card-footer\">{player.NickName}</div>\r\n                                        </a>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            <div id=\"Create-Player\" className=\"Player-Container card\">\r\n                                <a onClick={showCreatePlayer}>\r\n                                    <TiUserAdd size={150} className=\"card-img-top\" />\r\n                                    <div class=\"card-footer\">New Player</div>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-md-center\">\r\n                        <h2>Create New Player</h2>\r\n                    </div>\r\n                    <div className=\"row justify-content-md-center\">\r\n                        <div id=\"Login-Content\" className=\"d-inline-flex flex-column align-items-center justify-content-center\">\r\n                        <ProfileImageMenu ProfileImageState={setProfileImage} />\r\n                        {console.log(profileImage)}\r\n                            <form className=\"mt-3\">\r\n                                <div className=\"d-flex\">\r\n                                    <label htmlFor=\"nickname\" className=\"align-self-center\">Nickname</label>\r\n                                </div>\r\n                                <div className=\"d-flex\">\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" id='nickname' className=\"form-control-lg\" placeholder=\"nickname\" onChange={(e) => setNickname(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex\">\r\n                                    <label htmlFor=\"birthday\" className=\"align-self-center\">Birthday</label>\r\n                                </div>\r\n                                <div className=\"d-flex\">\r\n                                    <div className=\"form-group\">\r\n                                        <DatePicker\r\n                                            onChange={setBirthday}\r\n                                            value={birthday}\r\n                                            maxDate={new Date()}\r\n                                            minDetail={'decade'}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    {errorMessage ? <p>{errorMessage}</p> : null}\r\n                                   <button id=\"Login-Button\" onClick={createPlayer}>Create</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </>\r\n            :\r\n            <div className=\"container\">\r\n                <PlayerSignout />\r\n                <div id=\"Home-Title\" class=\"row justify-content-md-center title\">\r\n                    <h1>JumpStart</h1>\r\n                </div>\r\n                <div id=\"Home-Button\" className=\"row justify-content-md-center\">\r\n                    <Link to=\"/LevelNavigation\">\r\n                        <button type=\"button\" className=\"btn btn-primary\"><FaPlay size={125} /></button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n        ","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\libs\\Reducer.js",["246","247","248","249","250","251","252","253","254","255","256","257"],"export const initialState = {\r\n  loading: false,\r\n  errorMessage: null\r\n};\r\n \r\nexport const AuthReducer = (initialState, action) => {\r\n    if (action.type == \"REQUEST_LOGIN\" || action.type == \"CHANGE_PASSWORD\" || action.type == \"REQUEST_SIGNUP\" || action.type == \"REQUEST_SIGNUP_CONFIRMATION\")\r\n      return {\r\n        ...initialState,\r\n        loading: true\r\n      }\r\n\r\n    if (action.type == \"LOGIN_SUCCESS\" || action.type == \"CHANGE_PASSWORD_SUCCESS\" || action.type == \"SIGNUP_SUCCESS\" || action.type == \"SIGNUP_CONFIRMATION_SUCCESS\")\r\n      return {\r\n        ...initialState,\r\n        loading: false\r\n      }\r\n\r\n    if (action.type == \"LOGOUT\")\r\n      return {\r\n        ...initialState\r\n      }\r\n\r\n    if (action.type == \"LOGIN_ERROR\" || action.type == \"CHANGE_PASSWORD_ERROR\" || action.type == \"SIGNUP_ERROR\")\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMessage: action.error\r\n      }\r\n \r\n    throw new Error(`Unhandled action type: ${action.type}`);\r\n};","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\libs\\index.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\libs\\Actions.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\routes\\AuthenticatedRoute.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Settings.js",["258","259","260","261","262","263"],"import Popup from 'reactjs-popup'\r\nimport { RiSettings3Fill } from 'react-icons/ri'\r\nimport { useAuthUser, useAuthDispatch, useAuthState, logout, changePassword } from '../libs'\r\nimport { useState } from 'react'\r\nimport './Settings.scss'\r\n\r\n\r\nexport default function Settings(props) {\r\n\tconst dispatch = useAuthDispatch()\r\n  const userData = useAuthUser();\r\n  const [popupState, setpopupState] = useState(0)\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const [oldPassword, setoldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const { loading, errorMessage } = useAuthState()\r\n\r\n  const closeModal = () => {\r\n    setOpen(false)\r\n    setpopupState(0)\r\n    clearInput()\r\n  }\r\n\r\n  const clearInput = () => {\r\n    setoldPassword('')\r\n    setNewPassword('')\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    logout(dispatch)\r\n    window.location.reload(false);\r\n  }\r\n\r\n  const showChangePasswordForm = () => {\r\n    setpopupState(2)\r\n  }\r\n\r\n  const showVerifyDetails = () => {\r\n    setpopupState(1)\r\n  }\r\n\r\n  const handleChangePassword = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n        await changePassword(dispatch, { oldPassword, newPassword })\r\n        clearInput()\r\n        setpopupState(0)\r\n    } catch (error) {\r\n        console.log(error)\r\n        return\r\n    }\r\n  } \r\n\r\n    return (\r\n      <>\r\n      <button id=\"Settings-Button\" type=\"button\" className=\"btn\" onClick={() => setOpen(o => !o)}><RiSettings3Fill size={85} /></button>\r\n        <Popup \r\n            modal\r\n            open={open} \r\n            closeOnDocumentClick\r\n            closeOnEscape\r\n            onClose={closeModal}\r\n        >\r\n        {popupState === 0 &&\r\n          <div>\r\n            <a className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </a>\r\n            <div id=\"Settings-Title\" className=\"settingsContent\">\r\n                <h3>Account Options</h3>\r\n            </div>\r\n            <div className=\"settingsContent\">\r\n                <a onClick={showVerifyDetails}>\r\n                    Verify Details\r\n                </a>\r\n            </div>\r\n            <div className=\"settingsContent\">\r\n                <a onClick={showChangePasswordForm}>\r\n                    Change Password\r\n                </a>\r\n            </div>\r\n            <div className=\"settingsContent\">\r\n                <a onClick={handleLogout}>\r\n                    Sign Out\r\n                </a>\r\n            </div>\r\n          </div>\r\n        }\r\n        {popupState === 1 &&\r\n          <div>\r\n            <a className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </a>\r\n            <div id=\"Settings-Title\" className=\"settingsContent\">\r\n                <h3>Verify Details</h3>\r\n            </div>\r\n            <div className=\"settingsContent\">\r\n              {`Email: ${userData.attributes.email}`}\r\n            </div>\r\n            <div className=\"settingsContent\">\r\n              {`Phone Number: ${userData.attributes.phone_number}`}\r\n            </div>\r\n          </div>\r\n        }\r\n        {popupState === 2 &&\r\n          <div>\r\n            <a className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </a>\r\n            <div id=\"Settings-Title\" className=\"settingsContent\">\r\n                <h3>Change Password</h3>\r\n            </div>\r\n            {\r\n                errorMessage ? <p>{errorMessage}</p> : null\r\n            }\r\n            <form >\r\n              <div>\r\n                <div>\r\n                  <label htmlFor=\"oldPassword\">Old Password: </label>\r\n                  <input type=\"text\" id='oldPassword' value={oldPassword} onChange={(e) => setoldPassword(e.target.value)} disabled={loading} />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"newPassword\">New Password: </label>\r\n                  <input type=\"password\" id='newPassword' value={newPassword} onChange={(e) => setNewPassword(e.target.value)} disabled={loading} />\r\n                </div>\r\n              </div>\r\n              <button onClick={handleChangePassword} disabled={loading}>Confirm</button>\r\n            </form>\r\n          </div>\r\n        }\r\n        </Popup>\r\n      </>\r\n    )\r\n}","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\account\\SignUpPage.js",["264","265","266","267","268","269","270","271"],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\account\\SignupPage.js",["272","273","274","275"],"import React, { useState, useEffect } from 'react'\r\nimport { signupUser, confirmUserSignUp, useAuthState, useAuthDispatch } from '../../libs'\r\nimport { Link } from 'react-router-dom';\r\nimport { Oval } from 'react-loading-icons'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport './SignupPage.scss'\r\n\r\nexport default function SignupPage(props) {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [authenticationCode, setAuthenticationCode] = useState('')\r\n    const [step, setStep] = useState(0)\r\n    const [errors, setErrors] = useState(false)\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const dispatch = useAuthDispatch()\r\n    let { loading, errorMessage } = useAuthState()\r\n\r\n    useEffect(() => {\r\n        errorMessage = null\r\n    }, [])\r\n\r\n    const handleSignUp = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            await signupUser(dispatch, { email, password })\r\n            setStep(1)\r\n        } catch (error) {\r\n            errorMessage = error\r\n        }\r\n    }\r\n    \r\n    const goBack = () => {\r\n        setStep(0)\r\n    }\r\n    \r\n    const confirmSignUp = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            await confirmUserSignUp(dispatch, { email, authenticationCode })\r\n            navigate('../Login')\r\n        } catch (error) {\r\n            errorMessage = error\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"Signup-Background\">\r\n            <div className=\"container\">\r\n                <div id=\"Title-Row\" className=\"row\">\r\n                    <div className=\"container\">\r\n                        <div id=\"Login-Title\" class=\"row justify-content-md-center\">\r\n                            <h1>JumpStart</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"Signup-Content-Row\" className=\"row mt-4\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-md-center\">\r\n                            <h2>{step === 0 ? 'Sign Up' : 'Confirm Sign Up'}</h2>\r\n                        </div>\r\n                        <div className=\"row justify-content-md-center\">\r\n                            <div id=\"Signup-Content\" className=\"d-inline-flex flex-column align-items-center justify-content-center\">\r\n                                {step === 0 &&\r\n                                    <>\r\n                                        <span>Already have an account?&nbsp;\r\n                                            <Link to='../Login'>\r\n                                                <a>Log In Here</a>\r\n                                            </Link>\r\n                                        </span>\r\n                                        <form className=\"mt-3\">\r\n                                            <div className=\"d-flex\">\r\n                                                <label htmlFor=\"email\" className=\"align-self-center\">Email</label>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" id=\"email\" className=\"form-control-lg\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} name=\"email\" required disabled={loading} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <label htmlFor=\"password\" className=\"align-self-center\">Password</label>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"password\" id=\"password\" className=\"form-control-lg\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} name=\"password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" required disabled={loading} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <label htmlFor=\"confirmPassword\" className=\"align-self-center\">Confirm Password</label>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"password\" id=\"confirmPassword\" className=\"form-control-lg\" placeholder=\"confirm password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} name=\"confirmPassword\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" required disabled={loading} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <label htmlFor=\"email\" className=\"align-self-center\">Phone Number</label>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"tel\" id=\"phoneNumber\" className=\"form-control-lg\" placeholder=\"phone number (optional)\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} name=\"phoneNumber\" disabled={loading} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-end\">{errorMessage ? <p>{errorMessage}</p> : null}</div>\r\n                                            <div className=\"d-flex justify-content-end\">\r\n                                                {loading === true && <Oval />}<button onClick={handleSignUp} disabled={loading}>Create Account</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </>\r\n                                }\r\n                                {step === 1 &&\r\n                                    <div>\r\n                                        <form className=\"mt-3\">\r\n                                            <div className=\"d-flex\">\r\n                                                <label htmlFor=\"email\" className=\"align-self-center\">Email</label>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" value={email} className=\"form-control-lg\" disabled name=\"email\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <label htmlFor=\"authenticationCode\" className=\"align-self-center\">Authentication Code</label>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" value={authenticationCode} className=\"form-control-lg\" onChange={(e) => setAuthenticationCode(e.target.value)} name=\"authenticationCode\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-end\">{errorMessage ? <p>{errorMessage}</p> : null}</div>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <button onClick={goBack} disabled={loading}>Go Back</button>{loading === true && <Oval />}<button onClick={confirmSignUp} disabled={loading} >Authenticate</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}",["276","277"],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Profile-Image-Menu.js",["278","279","280"],"import { ProfilePictureImages } from './images/ProfilePictureImages'\r\nimport { RiLock2Fill } from 'react-icons/ri'\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport './Profile-Image-Menu.scss'\r\n\r\nexport default function ProfileImageMenu(props) {\r\n\r\n    return (\r\n        <SimpleBar style={{ minWidth: 860 }} autoHide={false}>\r\n            <div id=\"Profile-Image-Menu-Container\">\r\n                <div className=\"d-flex\">\r\n                    {ProfilePictureImages.map((image,i) => {\r\n                        return (\r\n                            <div key={i} className=\"card\">\r\n                                <a onClick={() => props.ProfileImageState(i)}>\r\n                                    <img class=\"card-img-top\" src={image.default} alt={`Profile Picture ${i}`} />\r\n                                </a>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </SimpleBar>\r\n    )\r\n\r\n}\r\n","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Player-Signout.js",["281"],"import { BiLogOut } from 'react-icons/bi'\r\nimport { useAuthPlayer } from '../libs'\r\nimport './Player-Signout.scss'\r\n\r\nexport default function PlayerSignout() {\r\n\r\n    const currentPlayer = useAuthPlayer();\r\n\r\n    return(\r\n        <div id=\"Player-Logout-Button\">\r\n            <a onClick={() => currentPlayer.setPlayer(false)}><BiLogOut size={85} /></a>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\Birthday-Format.js",["282"],"\r\nexport default function FormatBirthday(date) {\r\n    let formattedBirthday = date.slice(11,15) + '-' + returnMonth(date) + '-' + date.slice(8,10)\r\n    return formattedBirthday\r\n}\r\n\r\nfunction returnMonth(date) {\r\n    switch(date.slice(4,7)) {\r\n        case 'Jan':\r\n            return '01'\r\n        case 'Feb':\r\n            return '02'\r\n        case 'Mar': \r\n            return '03'\r\n        case 'Apr':\r\n            return '04'\r\n        case 'May':\r\n            return '05'\r\n        case 'Jun':\r\n            return '06'\r\n        case 'Jul':\r\n            return '07'\r\n        case 'Aug':\r\n            return '08'\r\n        case 'Sep':\r\n            return '09'\r\n        case 'Oct':\r\n            return '10'\r\n        case 'Nov':\r\n            return '11'\r\n        case 'Dec':\r\n            return '12'\r\n    }\r\n}","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\images\\ProfilePictureImages.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\images\\Monster-Images.js",[],"C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\pages\\SkillNavigationPage.js",["283","284"],"import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport { useAuthPlayer, useAuthUser } from '../libs'\r\nimport LevelNavComponent from '../components/LevelNavComponent'\r\n\r\nexport default function SkillNavigationPage(props) {\r\n\r\n    const levelList = props.Levels;\r\n    const currentPlayer = useAuthPlayer()\r\n    const user = useAuthUser()\r\n\r\n    const [progress, setProgress] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    function getLevelProgress(GameName) {\r\n        let total = 0\r\n        for (let i = 0; i < progress.length; i++) {\r\n            if (progress[i].GameName === GameName) {\r\n                total += progress[i].LevelsCompleted\r\n            }\r\n        }\r\n        return total\r\n    }\r\n\r\n    const GetLevelprogress = () => {\r\n        Axios.post('http://localhost:3001/api/getlevelprogress', {\r\n            UserName: user.attributes.sub,\r\n            NickName: currentPlayer.player.NickName,\r\n            SkillName: props.SkillName\r\n        }).then((response) => {\r\n            setProgress(response.data);\r\n        }).catch((error) => {\r\n            setErrorMessage(error)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetLevelprogress()\r\n    }, [])\r\n    \r\n    return(\r\n        <LevelNavComponent Levels={levelList} getProgress={getLevelProgress} />\r\n    )\r\n}","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\LevelNavComponent.js",["285"],"import React from 'react'\r\nimport { RiUserFill } from 'react-icons/ri'\r\nimport { TiTick } from 'react-icons/ti'\r\nimport { BsArrowRightShort } from 'react-icons/bs'\r\nimport SimpleBar from 'simplebar-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuthPlayer } from '../libs/'\r\nimport LevelNavbar from '../components/LevelNavbar'\r\nimport 'simplebar/dist/simplebar.min.css'\r\n\r\nexport default function LevelNavigationPage(props) {\r\n\r\n    const currentPlayer = useAuthPlayer()\r\n\r\n    return (\r\n        <div id=\"Level-Nav-Background\">\r\n            <div className=\"container\">\r\n                <div className=\"d-flex mb-3\">\r\n                    <div className=\"mr-auto\">\r\n                        <h1 id=\"Level-Navigation-Title\">JumpStart</h1>\r\n                    </div>\r\n                    <div id=\"Current-Player\" className=\"align-self-center\">\r\n                        <RiUserFill />{currentPlayer.player.NickName}\r\n                    </div>\r\n                </div>\r\n                <LevelNavbar />\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <SimpleBar style={{ height: '70vh' }} autoHide={false}>\r\n                    <div id=\"Level-Nav\">\r\n                        {props.Levels.map((level,i) => {\r\n                            return (    \r\n                                <Link to={level.to} key={i}>\r\n                                    <div className={`d-inline-flex justify-content-center align-items-center mr-4 mb-5 Game-Container ${props.getProgress(level.name) >= level.numLevels ? 'green' : 'orange' }`}>\r\n                                        <div className=\"nav-item\" id={\"Game-\"+level.id}>\r\n                                            <div className=\"d-flex justify-content-end\">\r\n                                                <div className=\"d-inline-flex nav-item-svg\">\r\n                                                    {props.getProgress(level.name) >= level.numLevels ? <TiTick size={40} /> : <BsArrowRightShort size={40} /> }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex justify-content-center\"><img src={level.monster} /></div>\r\n                                            <div className=\"d-flex justify-content-center level-name\">{level.name}</div>\r\n                                            <div className=\"d-flex justify-content-center level-progress\">{`${props.getProgress(level.name)} of ${level.numLevels} completed`}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </SimpleBar>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Sam.Sam-PC\\Documents\\GitHub\\321-project\\src\\components\\LevelNavbar.js",[],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":19,"column":12,"nodeType":"292","messageId":"293","endLine":19,"endColumn":24},{"ruleId":"294","severity":1,"message":"295","line":44,"column":8,"nodeType":"296","endLine":44,"endColumn":10,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":74,"column":92,"nodeType":"300","endLine":74,"endColumn":119},{"ruleId":"301","severity":1,"message":"302","line":6,"column":5,"nodeType":"303","messageId":"304","endLine":8,"endColumn":6},{"ruleId":"290","severity":1,"message":"305","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":17},{"ruleId":"306","severity":1,"message":"307","line":23,"column":5,"nodeType":"292","messageId":"308","endLine":23,"endColumn":15},{"ruleId":"306","severity":1,"message":"309","line":24,"column":5,"nodeType":"292","messageId":"308","endLine":24,"endColumn":16},{"ruleId":"294","severity":1,"message":"310","line":28,"column":8,"nodeType":"296","endLine":28,"endColumn":43,"suggestions":"311"},{"ruleId":"294","severity":1,"message":"312","line":35,"column":8,"nodeType":"296","endLine":35,"endColumn":20,"suggestions":"313"},{"ruleId":"314","severity":1,"message":"315","line":19,"column":40,"nodeType":"316","messageId":"317","endLine":19,"endColumn":42},{"ruleId":"298","severity":1,"message":"299","line":20,"column":15,"nodeType":"300","endLine":20,"endColumn":46},{"ruleId":"298","severity":1,"message":"299","line":8,"column":54,"nodeType":"300","endLine":8,"endColumn":73},{"ruleId":"314","severity":1,"message":"315","line":14,"column":18,"nodeType":"316","messageId":"317","endLine":14,"endColumn":20},{"ruleId":"314","severity":1,"message":"315","line":16,"column":25,"nodeType":"316","messageId":"317","endLine":16,"endColumn":27},{"ruleId":"314","severity":1,"message":"315","line":18,"column":25,"nodeType":"316","messageId":"317","endLine":18,"endColumn":27},{"ruleId":"314","severity":1,"message":"315","line":21,"column":50,"nodeType":"316","messageId":"317","endLine":21,"endColumn":52},{"ruleId":"318","severity":1,"message":"319","line":54,"column":5,"nodeType":"320","messageId":"321","endLine":65,"endColumn":6},{"ruleId":"314","severity":1,"message":"315","line":79,"column":26,"nodeType":"316","messageId":"317","endLine":79,"endColumn":28},{"ruleId":"314","severity":1,"message":"315","line":80,"column":38,"nodeType":"316","messageId":"317","endLine":80,"endColumn":40},{"ruleId":"314","severity":1,"message":"315","line":80,"column":72,"nodeType":"316","messageId":"317","endLine":80,"endColumn":74},{"ruleId":"314","severity":1,"message":"315","line":82,"column":38,"nodeType":"316","messageId":"317","endLine":82,"endColumn":40},{"ruleId":"314","severity":1,"message":"315","line":82,"column":72,"nodeType":"316","messageId":"317","endLine":82,"endColumn":74},{"ruleId":"314","severity":1,"message":"315","line":82,"column":107,"nodeType":"316","messageId":"317","endLine":82,"endColumn":109},{"ruleId":"314","severity":1,"message":"315","line":123,"column":30,"nodeType":"316","messageId":"317","endLine":123,"endColumn":32},{"ruleId":"322","severity":1,"message":"323","line":10,"column":13,"nodeType":"300","endLine":10,"endColumn":62},{"ruleId":"290","severity":1,"message":"291","line":21,"column":12,"nodeType":"292","messageId":"293","endLine":21,"endColumn":24},{"ruleId":"294","severity":1,"message":"324","line":56,"column":8,"nodeType":"296","endLine":56,"endColumn":20,"suggestions":"325"},{"ruleId":"294","severity":1,"message":"326","line":66,"column":8,"nodeType":"296","endLine":66,"endColumn":19,"suggestions":"327"},{"ruleId":"314","severity":1,"message":"315","line":106,"column":33,"nodeType":"316","messageId":"317","endLine":106,"endColumn":35},{"ruleId":"322","severity":1,"message":"323","line":106,"column":44,"nodeType":"300","endLine":106,"endColumn":81},{"ruleId":"314","severity":1,"message":"315","line":115,"column":33,"nodeType":"316","messageId":"317","endLine":115,"endColumn":35},{"ruleId":"322","severity":1,"message":"323","line":115,"column":44,"nodeType":"300","endLine":115,"endColumn":81},{"ruleId":"314","severity":1,"message":"315","line":124,"column":33,"nodeType":"316","messageId":"317","endLine":124,"endColumn":35},{"ruleId":"322","severity":1,"message":"323","line":124,"column":44,"nodeType":"300","endLine":124,"endColumn":81},{"ruleId":"290","severity":1,"message":"328","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":22},{"ruleId":"301","severity":1,"message":"302","line":5,"column":5,"nodeType":"303","messageId":"304","endLine":8,"endColumn":6},{"ruleId":"298","severity":1,"message":"299","line":13,"column":17,"nodeType":"300","endLine":13,"endColumn":73},{"ruleId":"298","severity":1,"message":"299","line":9,"column":13,"nodeType":"300","endLine":9,"endColumn":100},{"ruleId":"290","severity":1,"message":"329","line":5,"column":18,"nodeType":"292","messageId":"293","endLine":5,"endColumn":29},{"ruleId":"322","severity":1,"message":"323","line":53,"column":33,"nodeType":"300","endLine":58,"endColumn":34},{"ruleId":"322","severity":1,"message":"323","line":64,"column":33,"nodeType":"300","endLine":70,"endColumn":34},{"ruleId":"322","severity":1,"message":"323","line":97,"column":29,"nodeType":"300","endLine":103,"endColumn":30},{"ruleId":"290","severity":1,"message":"330","line":1,"column":8,"nodeType":"292","messageId":"293","endLine":1,"endColumn":13},{"ruleId":"286","replacedBy":"331"},{"ruleId":"288","replacedBy":"332"},{"ruleId":"294","severity":1,"message":"333","line":17,"column":24,"nodeType":"334","endLine":17,"endColumn":28},{"ruleId":"322","severity":1,"message":"323","line":48,"column":41,"nodeType":"300","endLine":48,"endColumn":44},{"ruleId":"322","severity":1,"message":"323","line":71,"column":45,"nodeType":"300","endLine":71,"endColumn":48},{"ruleId":"294","severity":1,"message":"335","line":52,"column":8,"nodeType":"296","endLine":52,"endColumn":10,"suggestions":"336"},{"ruleId":"322","severity":1,"message":"323","line":74,"column":41,"nodeType":"300","endLine":74,"endColumn":92},{"ruleId":"337","severity":1,"message":"338","line":75,"column":45,"nodeType":"300","endLine":75,"endColumn":160},{"ruleId":"322","severity":1,"message":"323","line":82,"column":33,"nodeType":"300","endLine":82,"endColumn":63},{"ruleId":"314","severity":1,"message":"315","line":7,"column":21,"nodeType":"316","messageId":"317","endLine":7,"endColumn":23},{"ruleId":"314","severity":1,"message":"315","line":7,"column":55,"nodeType":"316","messageId":"317","endLine":7,"endColumn":57},{"ruleId":"314","severity":1,"message":"315","line":7,"column":91,"nodeType":"316","messageId":"317","endLine":7,"endColumn":93},{"ruleId":"314","severity":1,"message":"315","line":7,"column":126,"nodeType":"316","messageId":"317","endLine":7,"endColumn":128},{"ruleId":"314","severity":1,"message":"315","line":13,"column":21,"nodeType":"316","messageId":"317","endLine":13,"endColumn":23},{"ruleId":"314","severity":1,"message":"315","line":13,"column":55,"nodeType":"316","messageId":"317","endLine":13,"endColumn":57},{"ruleId":"314","severity":1,"message":"315","line":13,"column":99,"nodeType":"316","messageId":"317","endLine":13,"endColumn":101},{"ruleId":"314","severity":1,"message":"315","line":13,"column":134,"nodeType":"316","messageId":"317","endLine":13,"endColumn":136},{"ruleId":"314","severity":1,"message":"315","line":19,"column":21,"nodeType":"316","messageId":"317","endLine":19,"endColumn":23},{"ruleId":"314","severity":1,"message":"315","line":24,"column":21,"nodeType":"316","messageId":"317","endLine":24,"endColumn":23},{"ruleId":"314","severity":1,"message":"315","line":24,"column":53,"nodeType":"316","messageId":"317","endLine":24,"endColumn":55},{"ruleId":"314","severity":1,"message":"315","line":24,"column":95,"nodeType":"316","messageId":"317","endLine":24,"endColumn":97},{"ruleId":"322","severity":1,"message":"323","line":66,"column":13,"nodeType":"300","endLine":66,"endColumn":55},{"ruleId":"322","severity":1,"message":"323","line":73,"column":17,"nodeType":"300","endLine":73,"endColumn":48},{"ruleId":"322","severity":1,"message":"323","line":78,"column":17,"nodeType":"300","endLine":78,"endColumn":53},{"ruleId":"322","severity":1,"message":"323","line":83,"column":17,"nodeType":"300","endLine":83,"endColumn":43},{"ruleId":"322","severity":1,"message":"323","line":91,"column":13,"nodeType":"300","endLine":91,"endColumn":55},{"ruleId":"322","severity":1,"message":"323","line":107,"column":13,"nodeType":"300","endLine":107,"endColumn":55},{"ruleId":"294","severity":1,"message":"339","line":44,"column":8,"nodeType":"296","endLine":44,"endColumn":22,"suggestions":"340"},{"ruleId":"294","severity":1,"message":"341","line":57,"column":8,"nodeType":"296","endLine":57,"endColumn":25,"suggestions":"342"},{"ruleId":"318","severity":1,"message":"319","line":60,"column":9,"nodeType":"320","messageId":"321","endLine":73,"endColumn":10},{"ruleId":"314","severity":1,"message":"315","line":80,"column":27,"nodeType":"316","messageId":"317","endLine":80,"endColumn":29},{"ruleId":"294","severity":1,"message":"343","line":82,"column":8,"nodeType":"296","endLine":82,"endColumn":32,"suggestions":"344"},{"ruleId":"294","severity":1,"message":"333","line":88,"column":24,"nodeType":"334","endLine":88,"endColumn":28},{"ruleId":"294","severity":1,"message":"345","line":118,"column":8,"nodeType":"296","endLine":118,"endColumn":28,"suggestions":"346"},{"ruleId":"322","severity":1,"message":"323","line":141,"column":49,"nodeType":"300","endLine":141,"endColumn":52},{"ruleId":"290","severity":1,"message":"347","line":16,"column":12,"nodeType":"292","messageId":"293","endLine":16,"endColumn":18},{"ruleId":"290","severity":1,"message":"348","line":16,"column":20,"nodeType":"292","messageId":"293","endLine":16,"endColumn":29},{"ruleId":"294","severity":1,"message":"333","line":24,"column":24,"nodeType":"334","endLine":24,"endColumn":28},{"ruleId":"322","severity":1,"message":"323","line":72,"column":49,"nodeType":"300","endLine":72,"endColumn":52},{"ruleId":"286","replacedBy":"349"},{"ruleId":"288","replacedBy":"350"},{"ruleId":"290","severity":1,"message":"351","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":21},{"ruleId":"322","severity":1,"message":"323","line":16,"column":33,"nodeType":"300","endLine":16,"endColumn":79},{"ruleId":"337","severity":1,"message":"338","line":17,"column":37,"nodeType":"300","endLine":17,"endColumn":114},{"ruleId":"322","severity":1,"message":"323","line":11,"column":13,"nodeType":"300","endLine":11,"endColumn":63},{"ruleId":"318","severity":1,"message":"319","line":8,"column":5,"nodeType":"320","messageId":"321","endLine":33,"endColumn":6},{"ruleId":"290","severity":1,"message":"291","line":13,"column":12,"nodeType":"292","messageId":"293","endLine":13,"endColumn":24},{"ruleId":"294","severity":1,"message":"352","line":39,"column":8,"nodeType":"296","endLine":39,"endColumn":10,"suggestions":"353"},{"ruleId":"298","severity":1,"message":"299","line":41,"column":92,"nodeType":"300","endLine":41,"endColumn":119},"no-native-reassign",["354"],"no-negated-in-lhs",["355"],"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetProgress'. Either include it or remove the dependency array.","ArrayExpression",["356"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'SimpleBar' is defined but never used.","no-func-assign","'onDropLeft' is a function.","isAFunction","'onDropRight' is a function.","React Hook useEffect has a missing dependency: 'winCondition'. Either include it or remove the dependency array.",["357"],"React Hook useEffect has a missing dependency: 'randomizeImages'. Either include it or remove the dependency array.",["358"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'startTime'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTimeTaken' needs the current value of 'startTime'.",["359"],"React Hook useEffect has missing dependencies: 'CreateAttempt', 'difficulty', and 'levelCompleted'. Either include them or remove the dependency array. You can also do a functional update 'setDifficulty(d => ...)' if you only need 'difficulty' in the 'setDifficulty' call.",["360"],"'shuffleArray' is defined but never used.","'TiArrowBack' is defined but never used.","'React' is defined but never used.",["354"],["355"],"Assignments to the 'errorMessage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'GetPlayers'. Either include it or remove the dependency array.",["361"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setEmailError' needs the current value of 'email'.",["362"],"React Hook useEffect has missing dependencies: 'PasswordErrorMessage', 'password', and 'schema'. Either include them or remove the dependency array.",["363"],"React Hook useEffect has missing dependencies: 'confirmPassword' and 'password'. Either include them or remove the dependency array.",["364"],"React Hook useEffect has missing dependencies: 'authenticationCode.length' and 'confirmSignUp'. Either include them or remove the dependency array.",["365"],"'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.",["354"],["355"],"'RiLock2Fill' is defined but never used.","React Hook useEffect has a missing dependency: 'GetLevelprogress'. Either include it or remove the dependency array.",["366"],"no-global-assign","no-unsafe-negation",{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},"Update the dependencies array to be: [GetProgress]",{"range":"389","text":"390"},"Update the dependencies array to be: [droppedItemLeft, droppedItemRight, winCondition]",{"range":"391","text":"392"},"Update the dependencies array to be: [popupState, randomizeImages]",{"range":"393","text":"394"},"Update the dependencies array to be: [finishTime, startTime]",{"range":"395","text":"396"},"Update the dependencies array to be: [CreateAttempt, difficulty, levelCompleted, timeTaken]",{"range":"397","text":"398"},"Update the dependencies array to be: [GetPlayers]",{"range":"399","text":"400"},"Update the dependencies array to be: [email, emailFocused]",{"range":"401","text":"402"},"Update the dependencies array to be: [PasswordErrorMessage, password, passwordFocused, schema]",{"range":"403","text":"404"},"Update the dependencies array to be: [confirmPassword, confirmPasswordFocused, password]",{"range":"405","text":"406"},"Update the dependencies array to be: [authenticationCode.length, autoCompleteSignUp, confirmSignUp]",{"range":"407","text":"408"},"Update the dependencies array to be: [GetLevelprogress]",{"range":"409","text":"410"},[1453,1455],"[GetProgress]",[1212,1247],"[droppedItemLeft, droppedItemRight, winCondition]",[1381,1393],"[popupState, randomizeImages]",[2259,2271],"[finishTime, startTime]",[2772,2783],"[CreateAttempt, difficulty, levelCompleted, timeTaken]",[1948,1950],"[GetPlayers]",[2352,2366],"[email, emailFocused]",[2964,2981],"[PasswordErrorMessage, password, passwordFocused, schema]",[3928,3952],"[confirmPassword, confirmPasswordFocused, password]",[4848,4868],"[authenticationCode.length, autoCompleteSignUp, confirmSignUp]",[1230,1232],"[GetLevelprogress]"]